Terminals unused in grammar

   NEG


Grammar

    0 $accept: program $end

    1 program: classes statements

    2 classes: classes class
    3        | %empty

    4 statements: statements statement
    5           | %empty

    6 class: class_signature class_body

    7 class_signature: CLASS IDENT '(' formal_args ')' opt_extends

    8 formal_args: IDENT ':' IDENT more_idents
    9            | %empty

   10 opt_extends: EXTENDS IDENT
   11            | %empty

   12 more_idents: more_idents ',' IDENT ':' IDENT
   13            | %empty

   14 class_body: '{' statements methods '}'

   15 methods: methods method
   16        | %empty

   17 method: DEF IDENT '(' formal_args ')' opt_ident statement_block

   18 opt_ident: ':' IDENT
   19          | %empty

   20 statement_block: '{' statements '}'

   21 statement: IF r_expr statement_block more_elif opt_else

   22 more_elif: more_elif ELIF r_expr statement_block
   23          | %empty

   24 opt_else: ELSE statement_block
   25         | %empty

   26 statement: WHILE r_expr statement_block
   27          | l_expr opt_ident '=' r_expr ';'

   28 l_expr: IDENT
   29       | r_expr '.' IDENT

   30 statement: r_expr ';'

   31 r_expr: STRING_LIT
   32       | INT_LIT
   33       | l_expr
   34       | r_expr '+' r_expr
   35       | r_expr '-' r_expr
   36       | r_expr '*' r_expr
   37       | r_expr '/' r_expr
   38       | '-' r_expr
   39       | '(' r_expr ')'
   40       | r_expr EQUALS r_expr
   41       | r_expr ATLEAST r_expr
   42       | r_expr ATMOST r_expr
   43       | r_expr '<' r_expr
   44       | r_expr '>' r_expr
   45       | r_expr AND r_expr
   46       | r_expr OR r_expr
   47       | NOT r_expr
   48       | r_expr '.' IDENT '(' actual_args ')'

   49 actual_args: r_expr seq_r_expr
   50            | %empty

   51 seq_r_expr: seq_r_expr ',' r_expr
   52           | %empty

   53 r_expr: IDENT '(' actual_args ')'

   54 statement: RETURN opt_r_expr ';'

   55 opt_r_expr: r_expr
   56           | %empty

   57 statement: typecase

   58 typecase: TYPECASE r_expr '{' type_alt '}'

   59 type_alt: type_alt IDENT ':' IDENT statement_block
   60         | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 17 39 48 53
')' (41) 7 17 39 48 53
'*' (42) 36
'+' (43) 34
',' (44) 12 51
'-' (45) 35 38
'.' (46) 29 48
'/' (47) 37
':' (58) 8 12 18 59
';' (59) 27 30 54
'<' (60) 43
'=' (61) 27
'>' (62) 44
'{' (123) 14 20 58
'}' (125) 14 20 58
error (256)
CLASS (258) 7
DEF (259) 17
EXTENDS (260) 10
IF (261) 21
ELIF (262) 22
ELSE (263) 24
WHILE (264) 26
RETURN (265) 54
TYPECASE (266) 58
ATLEAST (267) 41
ATMOST (268) 42
EQUALS (269) 40
AND (270) 45
OR (271) 46
NOT (272) 47
IDENT <str> (273) 7 8 10 12 17 18 28 29 48 53 59
INT_LIT <num> (274) 32
STRING_LIT <str> (275) 31
NEG (276)


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
classes (39)
    on left: 2 3, on right: 1 2
statements (40)
    on left: 4 5, on right: 1 4 14 20
class (41)
    on left: 6, on right: 2
class_signature (42)
    on left: 7, on right: 6
formal_args (43)
    on left: 8 9, on right: 7 17
opt_extends (44)
    on left: 10 11, on right: 7
more_idents (45)
    on left: 12 13, on right: 8 12
class_body (46)
    on left: 14, on right: 6
methods (47)
    on left: 15 16, on right: 14 15
method (48)
    on left: 17, on right: 15
opt_ident (49)
    on left: 18 19, on right: 17 27
statement_block (50)
    on left: 20, on right: 17 21 22 24 26 59
statement (51)
    on left: 21 26 27 30 54 57, on right: 4
more_elif (52)
    on left: 22 23, on right: 21 22
opt_else (53)
    on left: 24 25, on right: 21
l_expr (54)
    on left: 28 29, on right: 27 33
r_expr (55)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    53, on right: 21 22 26 27 29 30 34 35 36 37 38 39 40 41 42 43 44
    45 46 47 48 49 51 55 58
actual_args (56)
    on left: 49 50, on right: 48 53
seq_r_expr (57)
    on left: 51 52, on right: 49 51
opt_r_expr (58)
    on left: 55 56, on right: 54
typecase (59)
    on left: 58, on right: 57
type_alt (60)
    on left: 59 60, on right: 58 59


State 0

    0 $accept: . program $end
    1 program: . classes statements
    2 classes: . classes class
    3        | . %empty

    $default  reduce using rule 3 (classes)

    program  go to state 1
    classes  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: classes . statements
    2 classes: classes . class
    4 statements: . statements statement
    5           | . %empty  [$end, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(']
    6 class: . class_signature class_body
    7 class_signature: . CLASS IDENT '(' formal_args ')' opt_extends

    CLASS  shift, and go to state 4

    $default  reduce using rule 5 (statements)

    statements       go to state 5
    class            go to state 6
    class_signature  go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    7 class_signature: CLASS . IDENT '(' formal_args ')' opt_extends

    IDENT  shift, and go to state 8


State 5

    1 program: classes statements .  [$end]
    4 statements: statements . statement
   21 statement: . IF r_expr statement_block more_elif opt_else
   26          | . WHILE r_expr statement_block
   27          | . l_expr opt_ident '=' r_expr ';'
   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   30 statement: . r_expr ';'
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'
   54 statement: . RETURN opt_r_expr ';'
   57          | . typecase
   58 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    RETURN      shift, and go to state 11
    TYPECASE    shift, and go to state 12
    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 1 (program)

    statement  go to state 19
    l_expr     go to state 20
    r_expr     go to state 21
    typecase   go to state 22


State 6

    2 classes: classes class .

    $default  reduce using rule 2 (classes)


State 7

    6 class: class_signature . class_body
   14 class_body: . '{' statements methods '}'

    '{'  shift, and go to state 23

    class_body  go to state 24


State 8

    7 class_signature: CLASS IDENT . '(' formal_args ')' opt_extends

    '('  shift, and go to state 25


State 9

   21 statement: IF . r_expr statement_block more_elif opt_else
   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 27


State 10

   26 statement: WHILE . r_expr statement_block
   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 28


State 11

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'
   54 statement: RETURN . opt_r_expr ';'
   55 opt_r_expr: . r_expr
   56           | . %empty  [';']

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 56 (opt_r_expr)

    l_expr      go to state 26
    r_expr      go to state 29
    opt_r_expr  go to state 30


State 12

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'
   58 typecase: TYPECASE . r_expr '{' type_alt '}'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 31


State 13

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   47       | NOT . r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 32


State 14

   28 l_expr: IDENT .  [ATLEAST, ATMOST, EQUALS, AND, OR, '*', '/', '+', '-', '>', '<', '.', ')', ':', ',', '{', '=', ';']
   53 r_expr: IDENT . '(' actual_args ')'

    '('  shift, and go to state 33

    $default  reduce using rule 28 (l_expr)


State 15

   32 r_expr: INT_LIT .

    $default  reduce using rule 32 (r_expr)


State 16

   31 r_expr: STRING_LIT .

    $default  reduce using rule 31 (r_expr)


State 17

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   38       | '-' . r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 34


State 18

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   39       | '(' . r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 35


State 19

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


State 20

   18 opt_ident: . ':' IDENT
   19          | . %empty  ['=']
   27 statement: l_expr . opt_ident '=' r_expr ';'
   33 r_expr: l_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '*', '/', '+', '-', '>', '<', '.', ';']

    ':'  shift, and go to state 36

    '='       reduce using rule 19 (opt_ident)
    $default  reduce using rule 33 (r_expr)

    opt_ident  go to state 37


State 21

   29 l_expr: r_expr . '.' IDENT
   30 statement: r_expr . ';'
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49
    ';'      shift, and go to state 50


State 22

   57 statement: typecase .

    $default  reduce using rule 57 (statement)


State 23

    4 statements: . statements statement
    5           | . %empty
   14 class_body: '{' . statements methods '}'

    $default  reduce using rule 5 (statements)

    statements  go to state 51


State 24

    6 class: class_signature class_body .

    $default  reduce using rule 6 (class)


State 25

    7 class_signature: CLASS IDENT '(' . formal_args ')' opt_extends
    8 formal_args: . IDENT ':' IDENT more_idents
    9            | . %empty  [')']

    IDENT  shift, and go to state 52

    $default  reduce using rule 9 (formal_args)

    formal_args  go to state 53


State 26

   33 r_expr: l_expr .

    $default  reduce using rule 33 (r_expr)


State 27

   20 statement_block: . '{' statements '}'
   21 statement: IF r_expr . statement_block more_elif opt_else
   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 54

    statement_block  go to state 55


State 28

   20 statement_block: . '{' statements '}'
   26 statement: WHILE r_expr . statement_block
   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 54

    statement_block  go to state 56


State 29

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'
   55 opt_r_expr: r_expr .  [';']

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 55 (opt_r_expr)


State 30

   54 statement: RETURN opt_r_expr . ';'

    ';'  shift, and go to state 57


State 31

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'
   58 typecase: TYPECASE r_expr . '{' type_alt '}'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 58


State 32

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   47       | NOT r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '*', '/', '+', '-', '>', '<', ')', ',', '{', ';']
   48       | r_expr . '.' IDENT '(' actual_args ')'

    '.'  shift, and go to state 49

    $default  reduce using rule 47 (r_expr)

    Conflict between rule 47 and token ATLEAST resolved as reduce (ATLEAST < NOT).
    Conflict between rule 47 and token ATMOST resolved as reduce (ATMOST < NOT).
    Conflict between rule 47 and token EQUALS resolved as reduce (EQUALS < NOT).
    Conflict between rule 47 and token AND resolved as reduce (%left AND).
    Conflict between rule 47 and token OR resolved as reduce (%left OR).
    Conflict between rule 47 and token '*' resolved as reduce ('*' < NOT).
    Conflict between rule 47 and token '/' resolved as reduce ('/' < NOT).
    Conflict between rule 47 and token '+' resolved as reduce ('+' < NOT).
    Conflict between rule 47 and token '-' resolved as reduce ('-' < NOT).
    Conflict between rule 47 and token '>' resolved as reduce ('>' < NOT).
    Conflict between rule 47 and token '<' resolved as reduce ('<' < NOT).
    Conflict between rule 47 and token '.' resolved as shift (NOT < '.').


State 33

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   49 actual_args: . r_expr seq_r_expr
   50            | . %empty  [')']
   53 r_expr: . IDENT '(' actual_args ')'
   53       | IDENT '(' . actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 50 (actual_args)

    l_expr       go to state 26
    r_expr       go to state 59
    actual_args  go to state 60


State 34

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   38       | '-' r_expr .  ['*', '/', '+', '-', ')', ',', '{', ';']
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 38 (r_expr)

    Conflict between rule 38 and token ATLEAST resolved as shift ('-' < ATLEAST).
    Conflict between rule 38 and token ATMOST resolved as shift ('-' < ATMOST).
    Conflict between rule 38 and token EQUALS resolved as shift ('-' < EQUALS).
    Conflict between rule 38 and token AND resolved as shift ('-' < AND).
    Conflict between rule 38 and token OR resolved as shift ('-' < OR).
    Conflict between rule 38 and token '*' resolved as reduce ('*' < '-').
    Conflict between rule 38 and token '/' resolved as reduce ('/' < '-').
    Conflict between rule 38 and token '+' resolved as reduce (%left '+').
    Conflict between rule 38 and token '-' resolved as reduce (%left '-').
    Conflict between rule 38 and token '>' resolved as shift ('-' < '>').
    Conflict between rule 38 and token '<' resolved as shift ('-' < '<').
    Conflict between rule 38 and token '.' resolved as shift ('-' < '.').


State 35

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   39       | '(' r_expr . ')'
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49
    ')'      shift, and go to state 61


State 36

   18 opt_ident: ':' . IDENT

    IDENT  shift, and go to state 62


State 37

   27 statement: l_expr opt_ident . '=' r_expr ';'

    '='  shift, and go to state 63


State 38

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   41       | r_expr ATLEAST . r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 64


State 39

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   42       | r_expr ATMOST . r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 65


State 40

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   40       | r_expr EQUALS . r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 66


State 41

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   45       | r_expr AND . r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 67


State 42

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   46       | r_expr OR . r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 68


State 43

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   36       | r_expr '*' . r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 69


State 44

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   37       | r_expr '/' . r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 70


State 45

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   34       | r_expr '+' . r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 71


State 46

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   35       | r_expr '-' . r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 72


State 47

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   44       | r_expr '>' . r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 73


State 48

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   43       | r_expr '<' . r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 74


State 49

   29 l_expr: r_expr '.' . IDENT
   48 r_expr: r_expr '.' . IDENT '(' actual_args ')'

    IDENT  shift, and go to state 75


State 50

   30 statement: r_expr ';' .

    $default  reduce using rule 30 (statement)


State 51

    4 statements: statements . statement
   14 class_body: '{' statements . methods '}'
   15 methods: . methods method
   16        | . %empty  [DEF, '}']
   21 statement: . IF r_expr statement_block more_elif opt_else
   26          | . WHILE r_expr statement_block
   27          | . l_expr opt_ident '=' r_expr ';'
   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   30 statement: . r_expr ';'
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'
   54 statement: . RETURN opt_r_expr ';'
   57          | . typecase
   58 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    RETURN      shift, and go to state 11
    TYPECASE    shift, and go to state 12
    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 16 (methods)

    methods    go to state 76
    statement  go to state 19
    l_expr     go to state 20
    r_expr     go to state 21
    typecase   go to state 22


State 52

    8 formal_args: IDENT . ':' IDENT more_idents

    ':'  shift, and go to state 77


State 53

    7 class_signature: CLASS IDENT '(' formal_args . ')' opt_extends

    ')'  shift, and go to state 78


State 54

    4 statements: . statements statement
    5           | . %empty
   20 statement_block: '{' . statements '}'

    $default  reduce using rule 5 (statements)

    statements  go to state 79


State 55

   21 statement: IF r_expr statement_block . more_elif opt_else
   22 more_elif: . more_elif ELIF r_expr statement_block
   23          | . %empty

    $default  reduce using rule 23 (more_elif)

    more_elif  go to state 80


State 56

   26 statement: WHILE r_expr statement_block .

    $default  reduce using rule 26 (statement)


State 57

   54 statement: RETURN opt_r_expr ';' .

    $default  reduce using rule 54 (statement)


State 58

   58 typecase: TYPECASE r_expr '{' . type_alt '}'
   59 type_alt: . type_alt IDENT ':' IDENT statement_block
   60         | . %empty

    $default  reduce using rule 60 (type_alt)

    type_alt  go to state 81


State 59

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'
   49 actual_args: r_expr . seq_r_expr
   51 seq_r_expr: . seq_r_expr ',' r_expr
   52           | . %empty  [')', ',']

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 52 (seq_r_expr)

    seq_r_expr  go to state 82


State 60

   53 r_expr: IDENT '(' actual_args . ')'

    ')'  shift, and go to state 83


State 61

   39 r_expr: '(' r_expr ')' .

    $default  reduce using rule 39 (r_expr)


State 62

   18 opt_ident: ':' IDENT .

    $default  reduce using rule 18 (opt_ident)


State 63

   27 statement: l_expr opt_ident '=' . r_expr ';'
   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 84


State 64

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   41       | r_expr ATLEAST r_expr .  [ATLEAST, EQUALS, '*', '/', '+', '-', ')', ',', '{', ';']
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATMOST  shift, and go to state 39
    AND     shift, and go to state 41
    OR      shift, and go to state 42
    '>'     shift, and go to state 47
    '<'     shift, and go to state 48
    '.'     shift, and go to state 49

    $default  reduce using rule 41 (r_expr)

    Conflict between rule 41 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 41 and token ATMOST resolved as shift (ATLEAST < ATMOST).
    Conflict between rule 41 and token EQUALS resolved as reduce (EQUALS < ATLEAST).
    Conflict between rule 41 and token AND resolved as shift (ATLEAST < AND).
    Conflict between rule 41 and token OR resolved as shift (ATLEAST < OR).
    Conflict between rule 41 and token '*' resolved as reduce ('*' < ATLEAST).
    Conflict between rule 41 and token '/' resolved as reduce ('/' < ATLEAST).
    Conflict between rule 41 and token '+' resolved as reduce ('+' < ATLEAST).
    Conflict between rule 41 and token '-' resolved as reduce ('-' < ATLEAST).
    Conflict between rule 41 and token '>' resolved as shift (ATLEAST < '>').
    Conflict between rule 41 and token '<' resolved as shift (ATLEAST < '<').
    Conflict between rule 41 and token '.' resolved as shift (ATLEAST < '.').


State 65

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   42       | r_expr ATMOST r_expr .  [ATLEAST, ATMOST, EQUALS, '*', '/', '+', '-', ')', ',', '{', ';']
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    AND  shift, and go to state 41
    OR   shift, and go to state 42
    '>'  shift, and go to state 47
    '<'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 42 (r_expr)

    Conflict between rule 42 and token ATLEAST resolved as reduce (ATLEAST < ATMOST).
    Conflict between rule 42 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 42 and token EQUALS resolved as reduce (EQUALS < ATMOST).
    Conflict between rule 42 and token AND resolved as shift (ATMOST < AND).
    Conflict between rule 42 and token OR resolved as shift (ATMOST < OR).
    Conflict between rule 42 and token '*' resolved as reduce ('*' < ATMOST).
    Conflict between rule 42 and token '/' resolved as reduce ('/' < ATMOST).
    Conflict between rule 42 and token '+' resolved as reduce ('+' < ATMOST).
    Conflict between rule 42 and token '-' resolved as reduce ('-' < ATMOST).
    Conflict between rule 42 and token '>' resolved as shift (ATMOST < '>').
    Conflict between rule 42 and token '<' resolved as shift (ATMOST < '<').
    Conflict between rule 42 and token '.' resolved as shift (ATMOST < '.').


State 66

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   40       | r_expr EQUALS r_expr .  [EQUALS, '*', '/', '+', '-', ')', ',', '{', ';']
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 40 (r_expr)

    Conflict between rule 40 and token ATLEAST resolved as shift (EQUALS < ATLEAST).
    Conflict between rule 40 and token ATMOST resolved as shift (EQUALS < ATMOST).
    Conflict between rule 40 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 40 and token AND resolved as shift (EQUALS < AND).
    Conflict between rule 40 and token OR resolved as shift (EQUALS < OR).
    Conflict between rule 40 and token '*' resolved as reduce ('*' < EQUALS).
    Conflict between rule 40 and token '/' resolved as reduce ('/' < EQUALS).
    Conflict between rule 40 and token '+' resolved as reduce ('+' < EQUALS).
    Conflict between rule 40 and token '-' resolved as reduce ('-' < EQUALS).
    Conflict between rule 40 and token '>' resolved as shift (EQUALS < '>').
    Conflict between rule 40 and token '<' resolved as shift (EQUALS < '<').
    Conflict between rule 40 and token '.' resolved as shift (EQUALS < '.').


State 67

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   45       | r_expr AND r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '*', '/', '+', '-', '>', '<', ')', ',', '{', ';']
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    '.'  shift, and go to state 49

    $default  reduce using rule 45 (r_expr)

    Conflict between rule 45 and token ATLEAST resolved as reduce (ATLEAST < AND).
    Conflict between rule 45 and token ATMOST resolved as reduce (ATMOST < AND).
    Conflict between rule 45 and token EQUALS resolved as reduce (EQUALS < AND).
    Conflict between rule 45 and token AND resolved as reduce (%left AND).
    Conflict between rule 45 and token OR resolved as reduce (%left OR).
    Conflict between rule 45 and token '*' resolved as reduce ('*' < AND).
    Conflict between rule 45 and token '/' resolved as reduce ('/' < AND).
    Conflict between rule 45 and token '+' resolved as reduce ('+' < AND).
    Conflict between rule 45 and token '-' resolved as reduce ('-' < AND).
    Conflict between rule 45 and token '>' resolved as reduce ('>' < AND).
    Conflict between rule 45 and token '<' resolved as reduce ('<' < AND).
    Conflict between rule 45 and token '.' resolved as shift (AND < '.').


State 68

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   46       | r_expr OR r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '*', '/', '+', '-', '>', '<', ')', ',', '{', ';']
   48       | r_expr . '.' IDENT '(' actual_args ')'

    '.'  shift, and go to state 49

    $default  reduce using rule 46 (r_expr)

    Conflict between rule 46 and token ATLEAST resolved as reduce (ATLEAST < OR).
    Conflict between rule 46 and token ATMOST resolved as reduce (ATMOST < OR).
    Conflict between rule 46 and token EQUALS resolved as reduce (EQUALS < OR).
    Conflict between rule 46 and token AND resolved as reduce (%left AND).
    Conflict between rule 46 and token OR resolved as reduce (%left OR).
    Conflict between rule 46 and token '*' resolved as reduce ('*' < OR).
    Conflict between rule 46 and token '/' resolved as reduce ('/' < OR).
    Conflict between rule 46 and token '+' resolved as reduce ('+' < OR).
    Conflict between rule 46 and token '-' resolved as reduce ('-' < OR).
    Conflict between rule 46 and token '>' resolved as reduce ('>' < OR).
    Conflict between rule 46 and token '<' resolved as reduce ('<' < OR).
    Conflict between rule 46 and token '.' resolved as shift (OR < '.').


State 69

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   36       | r_expr '*' r_expr .  ['*', '/', ')', ',', '{', ';']
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 36 (r_expr)

    Conflict between rule 36 and token ATLEAST resolved as shift ('*' < ATLEAST).
    Conflict between rule 36 and token ATMOST resolved as shift ('*' < ATMOST).
    Conflict between rule 36 and token EQUALS resolved as shift ('*' < EQUALS).
    Conflict between rule 36 and token AND resolved as shift ('*' < AND).
    Conflict between rule 36 and token OR resolved as shift ('*' < OR).
    Conflict between rule 36 and token '*' resolved as reduce (%left '*').
    Conflict between rule 36 and token '/' resolved as reduce (%left '/').
    Conflict between rule 36 and token '+' resolved as shift ('*' < '+').
    Conflict between rule 36 and token '-' resolved as shift ('*' < '-').
    Conflict between rule 36 and token '>' resolved as shift ('*' < '>').
    Conflict between rule 36 and token '<' resolved as shift ('*' < '<').
    Conflict between rule 36 and token '.' resolved as shift ('*' < '.').


State 70

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   37       | r_expr '/' r_expr .  ['*', '/', ')', ',', '{', ';']
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 37 (r_expr)

    Conflict between rule 37 and token ATLEAST resolved as shift ('/' < ATLEAST).
    Conflict between rule 37 and token ATMOST resolved as shift ('/' < ATMOST).
    Conflict between rule 37 and token EQUALS resolved as shift ('/' < EQUALS).
    Conflict between rule 37 and token AND resolved as shift ('/' < AND).
    Conflict between rule 37 and token OR resolved as shift ('/' < OR).
    Conflict between rule 37 and token '*' resolved as reduce (%left '*').
    Conflict between rule 37 and token '/' resolved as reduce (%left '/').
    Conflict between rule 37 and token '+' resolved as shift ('/' < '+').
    Conflict between rule 37 and token '-' resolved as shift ('/' < '-').
    Conflict between rule 37 and token '>' resolved as shift ('/' < '>').
    Conflict between rule 37 and token '<' resolved as shift ('/' < '<').
    Conflict between rule 37 and token '.' resolved as shift ('/' < '.').


State 71

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   34       | r_expr '+' r_expr .  ['*', '/', '+', '-', ')', ',', '{', ';']
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 34 (r_expr)

    Conflict between rule 34 and token ATLEAST resolved as shift ('+' < ATLEAST).
    Conflict between rule 34 and token ATMOST resolved as shift ('+' < ATMOST).
    Conflict between rule 34 and token EQUALS resolved as shift ('+' < EQUALS).
    Conflict between rule 34 and token AND resolved as shift ('+' < AND).
    Conflict between rule 34 and token OR resolved as shift ('+' < OR).
    Conflict between rule 34 and token '*' resolved as reduce ('*' < '+').
    Conflict between rule 34 and token '/' resolved as reduce ('/' < '+').
    Conflict between rule 34 and token '+' resolved as reduce (%left '+').
    Conflict between rule 34 and token '-' resolved as reduce (%left '-').
    Conflict between rule 34 and token '>' resolved as shift ('+' < '>').
    Conflict between rule 34 and token '<' resolved as shift ('+' < '<').
    Conflict between rule 34 and token '.' resolved as shift ('+' < '.').


State 72

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   35       | r_expr '-' r_expr .  ['*', '/', '+', '-', ')', ',', '{', ';']
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 35 (r_expr)

    Conflict between rule 35 and token ATLEAST resolved as shift ('-' < ATLEAST).
    Conflict between rule 35 and token ATMOST resolved as shift ('-' < ATMOST).
    Conflict between rule 35 and token EQUALS resolved as shift ('-' < EQUALS).
    Conflict between rule 35 and token AND resolved as shift ('-' < AND).
    Conflict between rule 35 and token OR resolved as shift ('-' < OR).
    Conflict between rule 35 and token '*' resolved as reduce ('*' < '-').
    Conflict between rule 35 and token '/' resolved as reduce ('/' < '-').
    Conflict between rule 35 and token '+' resolved as reduce (%left '+').
    Conflict between rule 35 and token '-' resolved as reduce (%left '-').
    Conflict between rule 35 and token '>' resolved as shift ('-' < '>').
    Conflict between rule 35 and token '<' resolved as shift ('-' < '<').
    Conflict between rule 35 and token '.' resolved as shift ('-' < '.').


State 73

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   44       | r_expr '>' r_expr .  [ATLEAST, ATMOST, EQUALS, '*', '/', '+', '-', '>', '<', ')', ',', '{', ';']
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    AND  shift, and go to state 41
    OR   shift, and go to state 42
    '.'  shift, and go to state 49

    $default  reduce using rule 44 (r_expr)

    Conflict between rule 44 and token ATLEAST resolved as reduce (ATLEAST < '>').
    Conflict between rule 44 and token ATMOST resolved as reduce (ATMOST < '>').
    Conflict between rule 44 and token EQUALS resolved as reduce (EQUALS < '>').
    Conflict between rule 44 and token AND resolved as shift ('>' < AND).
    Conflict between rule 44 and token OR resolved as shift ('>' < OR).
    Conflict between rule 44 and token '*' resolved as reduce ('*' < '>').
    Conflict between rule 44 and token '/' resolved as reduce ('/' < '>').
    Conflict between rule 44 and token '+' resolved as reduce ('+' < '>').
    Conflict between rule 44 and token '-' resolved as reduce ('-' < '>').
    Conflict between rule 44 and token '>' resolved as reduce (%left '>').
    Conflict between rule 44 and token '<' resolved as reduce (%left '<').
    Conflict between rule 44 and token '.' resolved as shift ('>' < '.').


State 74

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   43       | r_expr '<' r_expr .  [ATLEAST, ATMOST, EQUALS, '*', '/', '+', '-', '>', '<', ')', ',', '{', ';']
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    AND  shift, and go to state 41
    OR   shift, and go to state 42
    '.'  shift, and go to state 49

    $default  reduce using rule 43 (r_expr)

    Conflict between rule 43 and token ATLEAST resolved as reduce (ATLEAST < '<').
    Conflict between rule 43 and token ATMOST resolved as reduce (ATMOST < '<').
    Conflict between rule 43 and token EQUALS resolved as reduce (EQUALS < '<').
    Conflict between rule 43 and token AND resolved as shift ('<' < AND).
    Conflict between rule 43 and token OR resolved as shift ('<' < OR).
    Conflict between rule 43 and token '*' resolved as reduce ('*' < '<').
    Conflict between rule 43 and token '/' resolved as reduce ('/' < '<').
    Conflict between rule 43 and token '+' resolved as reduce ('+' < '<').
    Conflict between rule 43 and token '-' resolved as reduce ('-' < '<').
    Conflict between rule 43 and token '>' resolved as reduce (%left '>').
    Conflict between rule 43 and token '<' resolved as reduce (%left '<').
    Conflict between rule 43 and token '.' resolved as shift ('<' < '.').


State 75

   29 l_expr: r_expr '.' IDENT .  [ATLEAST, ATMOST, EQUALS, AND, OR, '*', '/', '+', '-', '>', '<', '.', ')', ':', ',', '{', '=', ';']
   48 r_expr: r_expr '.' IDENT . '(' actual_args ')'

    '('  shift, and go to state 85

    $default  reduce using rule 29 (l_expr)


State 76

   14 class_body: '{' statements methods . '}'
   15 methods: methods . method
   17 method: . DEF IDENT '(' formal_args ')' opt_ident statement_block

    DEF  shift, and go to state 86
    '}'  shift, and go to state 87

    method  go to state 88


State 77

    8 formal_args: IDENT ':' . IDENT more_idents

    IDENT  shift, and go to state 89


State 78

    7 class_signature: CLASS IDENT '(' formal_args ')' . opt_extends
   10 opt_extends: . EXTENDS IDENT
   11            | . %empty  ['{']

    EXTENDS  shift, and go to state 90

    $default  reduce using rule 11 (opt_extends)

    opt_extends  go to state 91


State 79

    4 statements: statements . statement
   20 statement_block: '{' statements . '}'
   21 statement: . IF r_expr statement_block more_elif opt_else
   26          | . WHILE r_expr statement_block
   27          | . l_expr opt_ident '=' r_expr ';'
   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   30 statement: . r_expr ';'
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'
   54 statement: . RETURN opt_r_expr ';'
   57          | . typecase
   58 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    RETURN      shift, and go to state 11
    TYPECASE    shift, and go to state 12
    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18
    '}'         shift, and go to state 92

    statement  go to state 19
    l_expr     go to state 20
    r_expr     go to state 21
    typecase   go to state 22


State 80

   21 statement: IF r_expr statement_block more_elif . opt_else
   22 more_elif: more_elif . ELIF r_expr statement_block
   24 opt_else: . ELSE statement_block
   25         | . %empty  [$end, DEF, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(', '}']

    ELIF  shift, and go to state 93
    ELSE  shift, and go to state 94

    $default  reduce using rule 25 (opt_else)

    opt_else  go to state 95


State 81

   58 typecase: TYPECASE r_expr '{' type_alt . '}'
   59 type_alt: type_alt . IDENT ':' IDENT statement_block

    IDENT  shift, and go to state 96
    '}'    shift, and go to state 97


State 82

   49 actual_args: r_expr seq_r_expr .  [')']
   51 seq_r_expr: seq_r_expr . ',' r_expr

    ','  shift, and go to state 98

    $default  reduce using rule 49 (actual_args)


State 83

   53 r_expr: IDENT '(' actual_args ')' .

    $default  reduce using rule 53 (r_expr)


State 84

   27 statement: l_expr opt_ident '=' r_expr . ';'
   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49
    ';'      shift, and go to state 99


State 85

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   48       | r_expr '.' IDENT '(' . actual_args ')'
   49 actual_args: . r_expr seq_r_expr
   50            | . %empty  [')']
   53 r_expr: . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 50 (actual_args)

    l_expr       go to state 26
    r_expr       go to state 59
    actual_args  go to state 100


State 86

   17 method: DEF . IDENT '(' formal_args ')' opt_ident statement_block

    IDENT  shift, and go to state 101


State 87

   14 class_body: '{' statements methods '}' .

    $default  reduce using rule 14 (class_body)


State 88

   15 methods: methods method .

    $default  reduce using rule 15 (methods)


State 89

    8 formal_args: IDENT ':' IDENT . more_idents
   12 more_idents: . more_idents ',' IDENT ':' IDENT
   13            | . %empty

    $default  reduce using rule 13 (more_idents)

    more_idents  go to state 102


State 90

   10 opt_extends: EXTENDS . IDENT

    IDENT  shift, and go to state 103


State 91

    7 class_signature: CLASS IDENT '(' formal_args ')' opt_extends .

    $default  reduce using rule 7 (class_signature)


State 92

   20 statement_block: '{' statements '}' .

    $default  reduce using rule 20 (statement_block)


State 93

   22 more_elif: more_elif ELIF . r_expr statement_block
   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   53       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 104


State 94

   20 statement_block: . '{' statements '}'
   24 opt_else: ELSE . statement_block

    '{'  shift, and go to state 54

    statement_block  go to state 105


State 95

   21 statement: IF r_expr statement_block more_elif opt_else .

    $default  reduce using rule 21 (statement)


State 96

   59 type_alt: type_alt IDENT . ':' IDENT statement_block

    ':'  shift, and go to state 106


State 97

   58 typecase: TYPECASE r_expr '{' type_alt '}' .

    $default  reduce using rule 58 (typecase)


State 98

   28 l_expr: . IDENT
   29       | . r_expr '.' IDENT
   31 r_expr: . STRING_LIT
   32       | . INT_LIT
   33       | . l_expr
   34       | . r_expr '+' r_expr
   35       | . r_expr '-' r_expr
   36       | . r_expr '*' r_expr
   37       | . r_expr '/' r_expr
   38       | . '-' r_expr
   39       | . '(' r_expr ')'
   40       | . r_expr EQUALS r_expr
   41       | . r_expr ATLEAST r_expr
   42       | . r_expr ATMOST r_expr
   43       | . r_expr '<' r_expr
   44       | . r_expr '>' r_expr
   45       | . r_expr AND r_expr
   46       | . r_expr OR r_expr
   47       | . NOT r_expr
   48       | . r_expr '.' IDENT '(' actual_args ')'
   51 seq_r_expr: seq_r_expr ',' . r_expr
   53 r_expr: . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 107


State 99

   27 statement: l_expr opt_ident '=' r_expr ';' .

    $default  reduce using rule 27 (statement)


State 100

   48 r_expr: r_expr '.' IDENT '(' actual_args . ')'

    ')'  shift, and go to state 108


State 101

   17 method: DEF IDENT . '(' formal_args ')' opt_ident statement_block

    '('  shift, and go to state 109


State 102

    8 formal_args: IDENT ':' IDENT more_idents .  [')']
   12 more_idents: more_idents . ',' IDENT ':' IDENT

    ','  shift, and go to state 110

    $default  reduce using rule 8 (formal_args)


State 103

   10 opt_extends: EXTENDS IDENT .

    $default  reduce using rule 10 (opt_extends)


State 104

   20 statement_block: . '{' statements '}'
   22 more_elif: more_elif ELIF r_expr . statement_block
   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 54

    statement_block  go to state 111


State 105

   24 opt_else: ELSE statement_block .

    $default  reduce using rule 24 (opt_else)


State 106

   59 type_alt: type_alt IDENT ':' . IDENT statement_block

    IDENT  shift, and go to state 112


State 107

   29 l_expr: r_expr . '.' IDENT
   34 r_expr: r_expr . '+' r_expr
   35       | r_expr . '-' r_expr
   36       | r_expr . '*' r_expr
   37       | r_expr . '/' r_expr
   40       | r_expr . EQUALS r_expr
   41       | r_expr . ATLEAST r_expr
   42       | r_expr . ATMOST r_expr
   43       | r_expr . '<' r_expr
   44       | r_expr . '>' r_expr
   45       | r_expr . AND r_expr
   46       | r_expr . OR r_expr
   48       | r_expr . '.' IDENT '(' actual_args ')'
   51 seq_r_expr: seq_r_expr ',' r_expr .  [')', ',']

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '*'      shift, and go to state 43
    '/'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '>'      shift, and go to state 47
    '<'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 51 (seq_r_expr)


State 108

   48 r_expr: r_expr '.' IDENT '(' actual_args ')' .

    $default  reduce using rule 48 (r_expr)


State 109

    8 formal_args: . IDENT ':' IDENT more_idents
    9            | . %empty  [')']
   17 method: DEF IDENT '(' . formal_args ')' opt_ident statement_block

    IDENT  shift, and go to state 52

    $default  reduce using rule 9 (formal_args)

    formal_args  go to state 113


State 110

   12 more_idents: more_idents ',' . IDENT ':' IDENT

    IDENT  shift, and go to state 114


State 111

   22 more_elif: more_elif ELIF r_expr statement_block .

    $default  reduce using rule 22 (more_elif)


State 112

   20 statement_block: . '{' statements '}'
   59 type_alt: type_alt IDENT ':' IDENT . statement_block

    '{'  shift, and go to state 54

    statement_block  go to state 115


State 113

   17 method: DEF IDENT '(' formal_args . ')' opt_ident statement_block

    ')'  shift, and go to state 116


State 114

   12 more_idents: more_idents ',' IDENT . ':' IDENT

    ':'  shift, and go to state 117


State 115

   59 type_alt: type_alt IDENT ':' IDENT statement_block .

    $default  reduce using rule 59 (type_alt)


State 116

   17 method: DEF IDENT '(' formal_args ')' . opt_ident statement_block
   18 opt_ident: . ':' IDENT
   19          | . %empty  ['{']

    ':'  shift, and go to state 36

    $default  reduce using rule 19 (opt_ident)

    opt_ident  go to state 118


State 117

   12 more_idents: more_idents ',' IDENT ':' . IDENT

    IDENT  shift, and go to state 119


State 118

   17 method: DEF IDENT '(' formal_args ')' opt_ident . statement_block
   20 statement_block: . '{' statements '}'

    '{'  shift, and go to state 54

    statement_block  go to state 120


State 119

   12 more_idents: more_idents ',' IDENT ':' IDENT .

    $default  reduce using rule 12 (more_idents)


State 120

   17 method: DEF IDENT '(' formal_args ')' opt_ident statement_block .

    $default  reduce using rule 17 (method)
