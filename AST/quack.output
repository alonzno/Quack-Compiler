Terminals unused in grammar

   NEG
   Abstract
   syntax
   tree
   nodes


Grammar

    0 $accept: program $end

    1 program: opt_classes opt_statements

    2 opt_classes: classes
    3            | %empty

    4 classes: classes class
    5        | class

    6 opt_statements: statements
    7               | %empty

    8 statements: statements statement
    9           | statement

   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements methods '}'

   11 formal_args: args
   12            | %empty

   13 args: arg
   14     | args ',' arg

   15 arg: IDENT ':' IDENT

   16 opt_extends: EXTENDS IDENT
   17            | %empty

   18 methods: methods method
   19        | %empty

   20 method: DEF IDENT '(' formal_args ')' opt_ident statement_block

   21 opt_ident: ':' IDENT
   22          | %empty

   23 statement_block: '{' opt_statements '}'

   24 statement: IF r_expr statement_block more_elif opt_else

   25 more_elif: more_elif ELIF r_expr statement_block
   26          | %empty

   27 opt_else: ELSE statement_block
   28         | %empty

   29 statement: WHILE r_expr statement_block
   30          | l_expr opt_ident '=' r_expr ';'

   31 l_expr: IDENT
   32       | r_expr '.' IDENT

   33 statement: r_expr ';'

   34 r_expr: STRING_LIT
   35       | INT_LIT
   36       | l_expr
   37       | r_expr '+' r_expr
   38       | r_expr '-' r_expr
   39       | r_expr '*' r_expr
   40       | r_expr '/' r_expr
   41       | '-' r_expr
   42       | '(' r_expr ')'
   43       | r_expr EQUALS r_expr
   44       | r_expr ATLEAST r_expr
   45       | r_expr ATMOST r_expr
   46       | r_expr '<' r_expr
   47       | r_expr '>' r_expr
   48       | r_expr AND r_expr
   49       | r_expr OR r_expr
   50       | NOT r_expr
   51       | r_expr '.' IDENT '(' actual_args ')'

   52 actual_args: r_expr seq_r_expr
   53            | %empty

   54 seq_r_expr: seq_r_expr ',' r_expr
   55           | %empty

   56 r_expr: IDENT '(' actual_args ')'

   57 statement: RETURN opt_r_expr ';'

   58 opt_r_expr: r_expr
   59           | %empty

   60 statement: typecase

   61 typecase: TYPECASE r_expr '{' type_alt '}'

   62 type_alt: type_alt IDENT ':' IDENT statement_block
   63         | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 20 42 51 56
')' (41) 10 20 42 51 56
'*' (42) 39
'+' (43) 37
',' (44) 14 54
'-' (45) 38 41
'.' (46) 32 51
'/' (47) 40
':' (58) 15 21 62
';' (59) 30 33 57
'<' (60) 46
'=' (61) 30
'>' (62) 47
'{' (123) 10 23 61
'}' (125) 10 23 61
error (256)
CLASS (258) 10
DEF (259) 20
EXTENDS (260) 16
IF (261) 24
ELIF (262) 25
ELSE (263) 27
WHILE (264) 29
RETURN (265) 57
TYPECASE (266) 61
ATLEAST (267) 44
ATMOST (268) 45
EQUALS (269) 43
AND (270) 48
OR (271) 49
NOT (272) 50
IDENT <str> (273) 10 15 16 20 21 31 32 51 56 62
INT_LIT <num> (274) 35
STRING_LIT <str> (275) 34
NEG (276)
Abstract (277)
syntax (278)
tree (279)
nodes (280)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program <block> (42)
    on left: 1, on right: 0
opt_classes <block> (43)
    on left: 2 3, on right: 1
classes <block> (44)
    on left: 4 5, on right: 2 4
opt_statements <stub> (45)
    on left: 6 7, on right: 1 10 23
statements <stub> (46)
    on left: 8 9, on right: 6 8
class <clazz> (47)
    on left: 10, on right: 4 5
formal_args <block> (48)
    on left: 11 12, on right: 10 20
args <block> (49)
    on left: 13 14, on right: 11 14
arg <arg> (50)
    on left: 15, on right: 13 14
opt_extends <ident> (51)
    on left: 16 17, on right: 10
methods <stub> (52)
    on left: 18 19, on right: 10 18
method (53)
    on left: 20, on right: 18
opt_ident (54)
    on left: 21 22, on right: 20 30
statement_block (55)
    on left: 23, on right: 20 24 25 27 29 62
statement (56)
    on left: 24 29 30 33 57 60, on right: 8 9
more_elif (57)
    on left: 25 26, on right: 24 25
opt_else (58)
    on left: 27 28, on right: 24
l_expr (59)
    on left: 31 32, on right: 30 36
r_expr (60)
    on left: 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
    56, on right: 24 25 29 30 32 33 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 54 58 61
actual_args (61)
    on left: 52 53, on right: 51 56
seq_r_expr (62)
    on left: 54 55, on right: 52 54
opt_r_expr (63)
    on left: 58 59, on right: 57
typecase (64)
    on left: 61, on right: 60
type_alt (65)
    on left: 62 63, on right: 61 62


State 0

    0 $accept: . program $end
    1 program: . opt_classes opt_statements
    2 opt_classes: . classes
    3            | . %empty  [$end, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(']
    4 classes: . classes class
    5        | . class
   10 class: . CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements methods '}'

    CLASS  shift, and go to state 1

    $default  reduce using rule 3 (opt_classes)

    program      go to state 2
    opt_classes  go to state 3
    classes      go to state 4
    class        go to state 5


State 1

   10 class: CLASS . IDENT '(' formal_args ')' opt_extends '{' opt_statements methods '}'

    IDENT  shift, and go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: opt_classes . opt_statements
    6 opt_statements: . statements
    7               | . %empty  [$end]
    8 statements: . statements statement
    9           | . statement
   24 statement: . IF r_expr statement_block more_elif opt_else
   29          | . WHILE r_expr statement_block
   30          | . l_expr opt_ident '=' r_expr ';'
   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   33 statement: . r_expr ';'
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'
   57 statement: . RETURN opt_r_expr ';'
   60          | . typecase
   61 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    TYPECASE    shift, and go to state 11
    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 7 (opt_statements)

    opt_statements  go to state 18
    statements      go to state 19
    statement       go to state 20
    l_expr          go to state 21
    r_expr          go to state 22
    typecase        go to state 23


State 4

    2 opt_classes: classes .  [$end, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(']
    4 classes: classes . class
   10 class: . CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements methods '}'

    CLASS  shift, and go to state 1

    $default  reduce using rule 2 (opt_classes)

    class  go to state 24


State 5

    5 classes: class .

    $default  reduce using rule 5 (classes)


State 6

   10 class: CLASS IDENT . '(' formal_args ')' opt_extends '{' opt_statements methods '}'

    '('  shift, and go to state 25


State 7

    0 $accept: program $end .

    $default  accept


State 8

   24 statement: IF . r_expr statement_block more_elif opt_else
   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 27


State 9

   29 statement: WHILE . r_expr statement_block
   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 28


State 10

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'
   57 statement: RETURN . opt_r_expr ';'
   58 opt_r_expr: . r_expr
   59           | . %empty  [';']

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 59 (opt_r_expr)

    l_expr      go to state 26
    r_expr      go to state 29
    opt_r_expr  go to state 30


State 11

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'
   61 typecase: TYPECASE . r_expr '{' type_alt '}'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 31


State 12

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   50       | NOT . r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 32


State 13

   31 l_expr: IDENT .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', '.', ')', '{', ',', ':', '=', ';']
   56 r_expr: IDENT . '(' actual_args ')'

    '('  shift, and go to state 33

    $default  reduce using rule 31 (l_expr)


State 14

   35 r_expr: INT_LIT .

    $default  reduce using rule 35 (r_expr)


State 15

   34 r_expr: STRING_LIT .

    $default  reduce using rule 34 (r_expr)


State 16

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   41       | '-' . r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 34


State 17

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   42       | '(' . r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 35


State 18

    1 program: opt_classes opt_statements .

    $default  reduce using rule 1 (program)


State 19

    6 opt_statements: statements .  [$end, DEF, '}']
    8 statements: statements . statement
   24 statement: . IF r_expr statement_block more_elif opt_else
   29          | . WHILE r_expr statement_block
   30          | . l_expr opt_ident '=' r_expr ';'
   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   33 statement: . r_expr ';'
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'
   57 statement: . RETURN opt_r_expr ';'
   60          | . typecase
   61 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    TYPECASE    shift, and go to state 11
    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 6 (opt_statements)

    statement  go to state 36
    l_expr     go to state 21
    r_expr     go to state 22
    typecase   go to state 23


State 20

    9 statements: statement .

    $default  reduce using rule 9 (statements)


State 21

   21 opt_ident: . ':' IDENT
   22          | . %empty  ['=']
   30 statement: l_expr . opt_ident '=' r_expr ';'
   36 r_expr: l_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', '.', ';']

    ':'  shift, and go to state 37

    '='       reduce using rule 22 (opt_ident)
    $default  reduce using rule 36 (r_expr)

    opt_ident  go to state 38


State 22

   32 l_expr: r_expr . '.' IDENT
   33 statement: r_expr . ';'
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50
    ';'      shift, and go to state 51


State 23

   60 statement: typecase .

    $default  reduce using rule 60 (statement)


State 24

    4 classes: classes class .

    $default  reduce using rule 4 (classes)


State 25

   10 class: CLASS IDENT '(' . formal_args ')' opt_extends '{' opt_statements methods '}'
   11 formal_args: . args
   12            | . %empty  [')']
   13 args: . arg
   14     | . args ',' arg
   15 arg: . IDENT ':' IDENT

    IDENT  shift, and go to state 52

    $default  reduce using rule 12 (formal_args)

    formal_args  go to state 53
    args         go to state 54
    arg          go to state 55


State 26

   36 r_expr: l_expr .

    $default  reduce using rule 36 (r_expr)


State 27

   23 statement_block: . '{' opt_statements '}'
   24 statement: IF r_expr . statement_block more_elif opt_else
   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50
    '{'      shift, and go to state 56

    statement_block  go to state 57


State 28

   23 statement_block: . '{' opt_statements '}'
   29 statement: WHILE r_expr . statement_block
   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50
    '{'      shift, and go to state 56

    statement_block  go to state 58


State 29

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'
   58 opt_r_expr: r_expr .  [';']

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50

    $default  reduce using rule 58 (opt_r_expr)


State 30

   57 statement: RETURN opt_r_expr . ';'

    ';'  shift, and go to state 59


State 31

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'
   61 typecase: TYPECASE r_expr . '{' type_alt '}'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50
    '{'      shift, and go to state 60


State 32

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   50       | NOT r_expr .  [AND, OR, ')', '{', ',', ';']
   51       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50

    $default  reduce using rule 50 (r_expr)

    Conflict between rule 50 and token ATLEAST resolved as shift (NOT < ATLEAST).
    Conflict between rule 50 and token ATMOST resolved as shift (NOT < ATMOST).
    Conflict between rule 50 and token EQUALS resolved as shift (NOT < EQUALS).
    Conflict between rule 50 and token AND resolved as reduce (%left AND).
    Conflict between rule 50 and token OR resolved as reduce (%left OR).
    Conflict between rule 50 and token '>' resolved as shift (NOT < '>').
    Conflict between rule 50 and token '<' resolved as shift (NOT < '<').
    Conflict between rule 50 and token '+' resolved as shift (NOT < '+').
    Conflict between rule 50 and token '-' resolved as shift (NOT < '-').
    Conflict between rule 50 and token '*' resolved as shift (NOT < '*').
    Conflict between rule 50 and token '/' resolved as shift (NOT < '/').
    Conflict between rule 50 and token '.' resolved as shift (NOT < '.').


State 33

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   52 actual_args: . r_expr seq_r_expr
   53            | . %empty  [')']
   56 r_expr: . IDENT '(' actual_args ')'
   56       | IDENT '(' . actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 53 (actual_args)

    l_expr       go to state 26
    r_expr       go to state 61
    actual_args  go to state 62


State 34

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   41       | '-' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', '{', ',', ';']
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '.'  shift, and go to state 50

    $default  reduce using rule 41 (r_expr)

    Conflict between rule 41 and token ATLEAST resolved as reduce (ATLEAST < '-').
    Conflict between rule 41 and token ATMOST resolved as reduce (ATMOST < '-').
    Conflict between rule 41 and token EQUALS resolved as reduce (EQUALS < '-').
    Conflict between rule 41 and token AND resolved as reduce (AND < '-').
    Conflict between rule 41 and token OR resolved as reduce (OR < '-').
    Conflict between rule 41 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 41 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 41 and token '+' resolved as reduce (%left '+').
    Conflict between rule 41 and token '-' resolved as reduce (%left '-').
    Conflict between rule 41 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 41 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 41 and token '.' resolved as shift ('-' < '.').


State 35

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   42       | '(' r_expr . ')'
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50
    ')'      shift, and go to state 63


State 36

    8 statements: statements statement .

    $default  reduce using rule 8 (statements)


State 37

   21 opt_ident: ':' . IDENT

    IDENT  shift, and go to state 64


State 38

   30 statement: l_expr opt_ident . '=' r_expr ';'

    '='  shift, and go to state 65


State 39

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   44       | r_expr ATLEAST . r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 66


State 40

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   45       | r_expr ATMOST . r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 67


State 41

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   43       | r_expr EQUALS . r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 68


State 42

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   48       | r_expr AND . r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 69


State 43

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   49       | r_expr OR . r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 70


State 44

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   47       | r_expr '>' . r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 71


State 45

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   46       | r_expr '<' . r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 72


State 46

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   37       | r_expr '+' . r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 73


State 47

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   38       | r_expr '-' . r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 74


State 48

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   39       | r_expr '*' . r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 75


State 49

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   40       | r_expr '/' . r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 76


State 50

   32 l_expr: r_expr '.' . IDENT
   51 r_expr: r_expr '.' . IDENT '(' actual_args ')'

    IDENT  shift, and go to state 77


State 51

   33 statement: r_expr ';' .

    $default  reduce using rule 33 (statement)


State 52

   15 arg: IDENT . ':' IDENT

    ':'  shift, and go to state 78


State 53

   10 class: CLASS IDENT '(' formal_args . ')' opt_extends '{' opt_statements methods '}'

    ')'  shift, and go to state 79


State 54

   11 formal_args: args .  [')']
   14 args: args . ',' arg

    ','  shift, and go to state 80

    $default  reduce using rule 11 (formal_args)


State 55

   13 args: arg .

    $default  reduce using rule 13 (args)


State 56

    6 opt_statements: . statements
    7               | . %empty  ['}']
    8 statements: . statements statement
    9           | . statement
   23 statement_block: '{' . opt_statements '}'
   24 statement: . IF r_expr statement_block more_elif opt_else
   29          | . WHILE r_expr statement_block
   30          | . l_expr opt_ident '=' r_expr ';'
   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   33 statement: . r_expr ';'
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'
   57 statement: . RETURN opt_r_expr ';'
   60          | . typecase
   61 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    TYPECASE    shift, and go to state 11
    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 7 (opt_statements)

    opt_statements  go to state 81
    statements      go to state 19
    statement       go to state 20
    l_expr          go to state 21
    r_expr          go to state 22
    typecase        go to state 23


State 57

   24 statement: IF r_expr statement_block . more_elif opt_else
   25 more_elif: . more_elif ELIF r_expr statement_block
   26          | . %empty

    $default  reduce using rule 26 (more_elif)

    more_elif  go to state 82


State 58

   29 statement: WHILE r_expr statement_block .

    $default  reduce using rule 29 (statement)


State 59

   57 statement: RETURN opt_r_expr ';' .

    $default  reduce using rule 57 (statement)


State 60

   61 typecase: TYPECASE r_expr '{' . type_alt '}'
   62 type_alt: . type_alt IDENT ':' IDENT statement_block
   63         | . %empty

    $default  reduce using rule 63 (type_alt)

    type_alt  go to state 83


State 61

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'
   52 actual_args: r_expr . seq_r_expr
   54 seq_r_expr: . seq_r_expr ',' r_expr
   55           | . %empty  [')', ',']

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50

    $default  reduce using rule 55 (seq_r_expr)

    seq_r_expr  go to state 84


State 62

   56 r_expr: IDENT '(' actual_args . ')'

    ')'  shift, and go to state 85


State 63

   42 r_expr: '(' r_expr ')' .

    $default  reduce using rule 42 (r_expr)


State 64

   21 opt_ident: ':' IDENT .

    $default  reduce using rule 21 (opt_ident)


State 65

   30 statement: l_expr opt_ident '=' . r_expr ';'
   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 86


State 66

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   44       | r_expr ATLEAST r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '.'  shift, and go to state 50

    $default  reduce using rule 44 (r_expr)

    Conflict between rule 44 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 44 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 44 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 44 and token AND resolved as reduce (AND < ATLEAST).
    Conflict between rule 44 and token OR resolved as reduce (OR < ATLEAST).
    Conflict between rule 44 and token '>' resolved as reduce (%left '>').
    Conflict between rule 44 and token '<' resolved as reduce (%left '<').
    Conflict between rule 44 and token '+' resolved as shift (ATLEAST < '+').
    Conflict between rule 44 and token '-' resolved as shift (ATLEAST < '-').
    Conflict between rule 44 and token '*' resolved as shift (ATLEAST < '*').
    Conflict between rule 44 and token '/' resolved as shift (ATLEAST < '/').
    Conflict between rule 44 and token '.' resolved as shift (ATLEAST < '.').


State 67

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   45       | r_expr ATMOST r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '.'  shift, and go to state 50

    $default  reduce using rule 45 (r_expr)

    Conflict between rule 45 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 45 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 45 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 45 and token AND resolved as reduce (AND < ATMOST).
    Conflict between rule 45 and token OR resolved as reduce (OR < ATMOST).
    Conflict between rule 45 and token '>' resolved as reduce (%left '>').
    Conflict between rule 45 and token '<' resolved as reduce (%left '<').
    Conflict between rule 45 and token '+' resolved as shift (ATMOST < '+').
    Conflict between rule 45 and token '-' resolved as shift (ATMOST < '-').
    Conflict between rule 45 and token '*' resolved as shift (ATMOST < '*').
    Conflict between rule 45 and token '/' resolved as shift (ATMOST < '/').
    Conflict between rule 45 and token '.' resolved as shift (ATMOST < '.').


State 68

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   43       | r_expr EQUALS r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '.'  shift, and go to state 50

    $default  reduce using rule 43 (r_expr)

    Conflict between rule 43 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 43 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 43 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 43 and token AND resolved as reduce (AND < EQUALS).
    Conflict between rule 43 and token OR resolved as reduce (OR < EQUALS).
    Conflict between rule 43 and token '>' resolved as reduce (%left '>').
    Conflict between rule 43 and token '<' resolved as reduce (%left '<').
    Conflict between rule 43 and token '+' resolved as shift (EQUALS < '+').
    Conflict between rule 43 and token '-' resolved as shift (EQUALS < '-').
    Conflict between rule 43 and token '*' resolved as shift (EQUALS < '*').
    Conflict between rule 43 and token '/' resolved as shift (EQUALS < '/').
    Conflict between rule 43 and token '.' resolved as shift (EQUALS < '.').


State 69

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   48       | r_expr AND r_expr .  [AND, OR, ')', '{', ',', ';']
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50

    $default  reduce using rule 48 (r_expr)

    Conflict between rule 48 and token ATLEAST resolved as shift (AND < ATLEAST).
    Conflict between rule 48 and token ATMOST resolved as shift (AND < ATMOST).
    Conflict between rule 48 and token EQUALS resolved as shift (AND < EQUALS).
    Conflict between rule 48 and token AND resolved as reduce (%left AND).
    Conflict between rule 48 and token OR resolved as reduce (%left OR).
    Conflict between rule 48 and token '>' resolved as shift (AND < '>').
    Conflict between rule 48 and token '<' resolved as shift (AND < '<').
    Conflict between rule 48 and token '+' resolved as shift (AND < '+').
    Conflict between rule 48 and token '-' resolved as shift (AND < '-').
    Conflict between rule 48 and token '*' resolved as shift (AND < '*').
    Conflict between rule 48 and token '/' resolved as shift (AND < '/').
    Conflict between rule 48 and token '.' resolved as shift (AND < '.').


State 70

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   49       | r_expr OR r_expr .  [AND, OR, ')', '{', ',', ';']
   51       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50

    $default  reduce using rule 49 (r_expr)

    Conflict between rule 49 and token ATLEAST resolved as shift (OR < ATLEAST).
    Conflict between rule 49 and token ATMOST resolved as shift (OR < ATMOST).
    Conflict between rule 49 and token EQUALS resolved as shift (OR < EQUALS).
    Conflict between rule 49 and token AND resolved as reduce (%left AND).
    Conflict between rule 49 and token OR resolved as reduce (%left OR).
    Conflict between rule 49 and token '>' resolved as shift (OR < '>').
    Conflict between rule 49 and token '<' resolved as shift (OR < '<').
    Conflict between rule 49 and token '+' resolved as shift (OR < '+').
    Conflict between rule 49 and token '-' resolved as shift (OR < '-').
    Conflict between rule 49 and token '*' resolved as shift (OR < '*').
    Conflict between rule 49 and token '/' resolved as shift (OR < '/').
    Conflict between rule 49 and token '.' resolved as shift (OR < '.').


State 71

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   47       | r_expr '>' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '.'  shift, and go to state 50

    $default  reduce using rule 47 (r_expr)

    Conflict between rule 47 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 47 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 47 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 47 and token AND resolved as reduce (AND < '>').
    Conflict between rule 47 and token OR resolved as reduce (OR < '>').
    Conflict between rule 47 and token '>' resolved as reduce (%left '>').
    Conflict between rule 47 and token '<' resolved as reduce (%left '<').
    Conflict between rule 47 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 47 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 47 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 47 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 47 and token '.' resolved as shift ('>' < '.').


State 72

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   46       | r_expr '<' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 46
    '-'  shift, and go to state 47
    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '.'  shift, and go to state 50

    $default  reduce using rule 46 (r_expr)

    Conflict between rule 46 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 46 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 46 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 46 and token AND resolved as reduce (AND < '<').
    Conflict between rule 46 and token OR resolved as reduce (OR < '<').
    Conflict between rule 46 and token '>' resolved as reduce (%left '>').
    Conflict between rule 46 and token '<' resolved as reduce (%left '<').
    Conflict between rule 46 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 46 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 46 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 46 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 46 and token '.' resolved as shift ('<' < '.').


State 73

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   37       | r_expr '+' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', '{', ',', ';']
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '.'  shift, and go to state 50

    $default  reduce using rule 37 (r_expr)

    Conflict between rule 37 and token ATLEAST resolved as reduce (ATLEAST < '+').
    Conflict between rule 37 and token ATMOST resolved as reduce (ATMOST < '+').
    Conflict between rule 37 and token EQUALS resolved as reduce (EQUALS < '+').
    Conflict between rule 37 and token AND resolved as reduce (AND < '+').
    Conflict between rule 37 and token OR resolved as reduce (OR < '+').
    Conflict between rule 37 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 37 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 37 and token '+' resolved as reduce (%left '+').
    Conflict between rule 37 and token '-' resolved as reduce (%left '-').
    Conflict between rule 37 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 37 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 37 and token '.' resolved as shift ('+' < '.').


State 74

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   38       | r_expr '-' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', '{', ',', ';']
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '*'  shift, and go to state 48
    '/'  shift, and go to state 49
    '.'  shift, and go to state 50

    $default  reduce using rule 38 (r_expr)

    Conflict between rule 38 and token ATLEAST resolved as reduce (ATLEAST < '-').
    Conflict between rule 38 and token ATMOST resolved as reduce (ATMOST < '-').
    Conflict between rule 38 and token EQUALS resolved as reduce (EQUALS < '-').
    Conflict between rule 38 and token AND resolved as reduce (AND < '-').
    Conflict between rule 38 and token OR resolved as reduce (OR < '-').
    Conflict between rule 38 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 38 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 38 and token '+' resolved as reduce (%left '+').
    Conflict between rule 38 and token '-' resolved as reduce (%left '-').
    Conflict between rule 38 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 38 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 38 and token '.' resolved as shift ('-' < '.').


State 75

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   39       | r_expr '*' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', ')', '{', ',', ';']
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '.'  shift, and go to state 50

    $default  reduce using rule 39 (r_expr)

    Conflict between rule 39 and token ATLEAST resolved as reduce (ATLEAST < '*').
    Conflict between rule 39 and token ATMOST resolved as reduce (ATMOST < '*').
    Conflict between rule 39 and token EQUALS resolved as reduce (EQUALS < '*').
    Conflict between rule 39 and token AND resolved as reduce (AND < '*').
    Conflict between rule 39 and token OR resolved as reduce (OR < '*').
    Conflict between rule 39 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 39 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 39 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 39 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 39 and token '*' resolved as reduce (%left '*').
    Conflict between rule 39 and token '/' resolved as reduce (%left '/').
    Conflict between rule 39 and token '.' resolved as shift ('*' < '.').


State 76

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   40       | r_expr '/' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', ')', '{', ',', ';']
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    '.'  shift, and go to state 50

    $default  reduce using rule 40 (r_expr)

    Conflict between rule 40 and token ATLEAST resolved as reduce (ATLEAST < '/').
    Conflict between rule 40 and token ATMOST resolved as reduce (ATMOST < '/').
    Conflict between rule 40 and token EQUALS resolved as reduce (EQUALS < '/').
    Conflict between rule 40 and token AND resolved as reduce (AND < '/').
    Conflict between rule 40 and token OR resolved as reduce (OR < '/').
    Conflict between rule 40 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 40 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 40 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 40 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 40 and token '*' resolved as reduce (%left '*').
    Conflict between rule 40 and token '/' resolved as reduce (%left '/').
    Conflict between rule 40 and token '.' resolved as shift ('/' < '.').


State 77

   32 l_expr: r_expr '.' IDENT .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', '.', ')', '{', ',', ':', '=', ';']
   51 r_expr: r_expr '.' IDENT . '(' actual_args ')'

    '('  shift, and go to state 87

    $default  reduce using rule 32 (l_expr)


State 78

   15 arg: IDENT ':' . IDENT

    IDENT  shift, and go to state 88


State 79

   10 class: CLASS IDENT '(' formal_args ')' . opt_extends '{' opt_statements methods '}'
   16 opt_extends: . EXTENDS IDENT
   17            | . %empty  ['{']

    EXTENDS  shift, and go to state 89

    $default  reduce using rule 17 (opt_extends)

    opt_extends  go to state 90


State 80

   14 args: args ',' . arg
   15 arg: . IDENT ':' IDENT

    IDENT  shift, and go to state 52

    arg  go to state 91


State 81

   23 statement_block: '{' opt_statements . '}'

    '}'  shift, and go to state 92


State 82

   24 statement: IF r_expr statement_block more_elif . opt_else
   25 more_elif: more_elif . ELIF r_expr statement_block
   27 opt_else: . ELSE statement_block
   28         | . %empty  [$end, DEF, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(', '}']

    ELIF  shift, and go to state 93
    ELSE  shift, and go to state 94

    $default  reduce using rule 28 (opt_else)

    opt_else  go to state 95


State 83

   61 typecase: TYPECASE r_expr '{' type_alt . '}'
   62 type_alt: type_alt . IDENT ':' IDENT statement_block

    IDENT  shift, and go to state 96
    '}'    shift, and go to state 97


State 84

   52 actual_args: r_expr seq_r_expr .  [')']
   54 seq_r_expr: seq_r_expr . ',' r_expr

    ','  shift, and go to state 98

    $default  reduce using rule 52 (actual_args)


State 85

   56 r_expr: IDENT '(' actual_args ')' .

    $default  reduce using rule 56 (r_expr)


State 86

   30 statement: l_expr opt_ident '=' r_expr . ';'
   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50
    ';'      shift, and go to state 99


State 87

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   51       | r_expr '.' IDENT '(' . actual_args ')'
   52 actual_args: . r_expr seq_r_expr
   53            | . %empty  [')']
   56 r_expr: . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 53 (actual_args)

    l_expr       go to state 26
    r_expr       go to state 61
    actual_args  go to state 100


State 88

   15 arg: IDENT ':' IDENT .

    $default  reduce using rule 15 (arg)


State 89

   16 opt_extends: EXTENDS . IDENT

    IDENT  shift, and go to state 101


State 90

   10 class: CLASS IDENT '(' formal_args ')' opt_extends . '{' opt_statements methods '}'

    '{'  shift, and go to state 102


State 91

   14 args: args ',' arg .

    $default  reduce using rule 14 (args)


State 92

   23 statement_block: '{' opt_statements '}' .

    $default  reduce using rule 23 (statement_block)


State 93

   25 more_elif: more_elif ELIF . r_expr statement_block
   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 103


State 94

   23 statement_block: . '{' opt_statements '}'
   27 opt_else: ELSE . statement_block

    '{'  shift, and go to state 56

    statement_block  go to state 104


State 95

   24 statement: IF r_expr statement_block more_elif opt_else .

    $default  reduce using rule 24 (statement)


State 96

   62 type_alt: type_alt IDENT . ':' IDENT statement_block

    ':'  shift, and go to state 105


State 97

   61 typecase: TYPECASE r_expr '{' type_alt '}' .

    $default  reduce using rule 61 (typecase)


State 98

   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   54 seq_r_expr: seq_r_expr ',' . r_expr
   56 r_expr: . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 26
    r_expr  go to state 106


State 99

   30 statement: l_expr opt_ident '=' r_expr ';' .

    $default  reduce using rule 30 (statement)


State 100

   51 r_expr: r_expr '.' IDENT '(' actual_args . ')'

    ')'  shift, and go to state 107


State 101

   16 opt_extends: EXTENDS IDENT .

    $default  reduce using rule 16 (opt_extends)


State 102

    6 opt_statements: . statements
    7               | . %empty  [DEF, '}']
    8 statements: . statements statement
    9           | . statement
   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' . opt_statements methods '}'
   24 statement: . IF r_expr statement_block more_elif opt_else
   29          | . WHILE r_expr statement_block
   30          | . l_expr opt_ident '=' r_expr ';'
   31 l_expr: . IDENT
   32       | . r_expr '.' IDENT
   33 statement: . r_expr ';'
   34 r_expr: . STRING_LIT
   35       | . INT_LIT
   36       | . l_expr
   37       | . r_expr '+' r_expr
   38       | . r_expr '-' r_expr
   39       | . r_expr '*' r_expr
   40       | . r_expr '/' r_expr
   41       | . '-' r_expr
   42       | . '(' r_expr ')'
   43       | . r_expr EQUALS r_expr
   44       | . r_expr ATLEAST r_expr
   45       | . r_expr ATMOST r_expr
   46       | . r_expr '<' r_expr
   47       | . r_expr '>' r_expr
   48       | . r_expr AND r_expr
   49       | . r_expr OR r_expr
   50       | . NOT r_expr
   51       | . r_expr '.' IDENT '(' actual_args ')'
   56       | . IDENT '(' actual_args ')'
   57 statement: . RETURN opt_r_expr ';'
   60          | . typecase
   61 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    TYPECASE    shift, and go to state 11
    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 7 (opt_statements)

    opt_statements  go to state 108
    statements      go to state 19
    statement       go to state 20
    l_expr          go to state 21
    r_expr          go to state 22
    typecase        go to state 23


State 103

   23 statement_block: . '{' opt_statements '}'
   25 more_elif: more_elif ELIF r_expr . statement_block
   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50
    '{'      shift, and go to state 56

    statement_block  go to state 109


State 104

   27 opt_else: ELSE statement_block .

    $default  reduce using rule 27 (opt_else)


State 105

   62 type_alt: type_alt IDENT ':' . IDENT statement_block

    IDENT  shift, and go to state 110


State 106

   32 l_expr: r_expr . '.' IDENT
   37 r_expr: r_expr . '+' r_expr
   38       | r_expr . '-' r_expr
   39       | r_expr . '*' r_expr
   40       | r_expr . '/' r_expr
   43       | r_expr . EQUALS r_expr
   44       | r_expr . ATLEAST r_expr
   45       | r_expr . ATMOST r_expr
   46       | r_expr . '<' r_expr
   47       | r_expr . '>' r_expr
   48       | r_expr . AND r_expr
   49       | r_expr . OR r_expr
   51       | r_expr . '.' IDENT '(' actual_args ')'
   54 seq_r_expr: seq_r_expr ',' r_expr .  [')', ',']

    ATLEAST  shift, and go to state 39
    ATMOST   shift, and go to state 40
    EQUALS   shift, and go to state 41
    AND      shift, and go to state 42
    OR       shift, and go to state 43
    '>'      shift, and go to state 44
    '<'      shift, and go to state 45
    '+'      shift, and go to state 46
    '-'      shift, and go to state 47
    '*'      shift, and go to state 48
    '/'      shift, and go to state 49
    '.'      shift, and go to state 50

    $default  reduce using rule 54 (seq_r_expr)


State 107

   51 r_expr: r_expr '.' IDENT '(' actual_args ')' .

    $default  reduce using rule 51 (r_expr)


State 108

   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements . methods '}'
   18 methods: . methods method
   19        | . %empty

    $default  reduce using rule 19 (methods)

    methods  go to state 111


State 109

   25 more_elif: more_elif ELIF r_expr statement_block .

    $default  reduce using rule 25 (more_elif)


State 110

   23 statement_block: . '{' opt_statements '}'
   62 type_alt: type_alt IDENT ':' IDENT . statement_block

    '{'  shift, and go to state 56

    statement_block  go to state 112


State 111

   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements methods . '}'
   18 methods: methods . method
   20 method: . DEF IDENT '(' formal_args ')' opt_ident statement_block

    DEF  shift, and go to state 113
    '}'  shift, and go to state 114

    method  go to state 115


State 112

   62 type_alt: type_alt IDENT ':' IDENT statement_block .

    $default  reduce using rule 62 (type_alt)


State 113

   20 method: DEF . IDENT '(' formal_args ')' opt_ident statement_block

    IDENT  shift, and go to state 116


State 114

   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements methods '}' .

    $default  reduce using rule 10 (class)


State 115

   18 methods: methods method .

    $default  reduce using rule 18 (methods)


State 116

   20 method: DEF IDENT . '(' formal_args ')' opt_ident statement_block

    '('  shift, and go to state 117


State 117

   11 formal_args: . args
   12            | . %empty  [')']
   13 args: . arg
   14     | . args ',' arg
   15 arg: . IDENT ':' IDENT
   20 method: DEF IDENT '(' . formal_args ')' opt_ident statement_block

    IDENT  shift, and go to state 52

    $default  reduce using rule 12 (formal_args)

    formal_args  go to state 118
    args         go to state 54
    arg          go to state 55


State 118

   20 method: DEF IDENT '(' formal_args . ')' opt_ident statement_block

    ')'  shift, and go to state 119


State 119

   20 method: DEF IDENT '(' formal_args ')' . opt_ident statement_block
   21 opt_ident: . ':' IDENT
   22          | . %empty  ['{']

    ':'  shift, and go to state 37

    $default  reduce using rule 22 (opt_ident)

    opt_ident  go to state 120


State 120

   20 method: DEF IDENT '(' formal_args ')' opt_ident . statement_block
   23 statement_block: . '{' opt_statements '}'

    '{'  shift, and go to state 56

    statement_block  go to state 121


State 121

   20 method: DEF IDENT '(' formal_args ')' opt_ident statement_block .

    $default  reduce using rule 20 (method)
