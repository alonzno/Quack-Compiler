Terminals unused in grammar

   NEG
   Abstract
   syntax
   tree
   nodes


Grammar

    0 $accept: program $end

    1 program: opt_classes opt_statements

    2 opt_classes: classes
    3            | %empty

    4 classes: classes class
    5        | class

    6 opt_statements: statements
    7               | %empty

    8 statements: statements statement
    9           | statement

   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements opt_methods '}'

   11 formal_args: args
   12            | %empty

   13 args: arg
   14     | args ',' arg

   15 arg: IDENT ':' IDENT

   16 opt_extends: EXTENDS IDENT
   17            | %empty

   18 opt_methods: methods
   19            | %empty

   20 methods: methods method
   21        | method

   22 method: DEF IDENT '(' formal_args ')' opt_ident statement_block

   23 opt_ident: ':' IDENT
   24          | %empty

   25 statement_block: '{' opt_statements '}'

   26 statement: IF r_expr statement_block more_elif opt_else

   27 more_elif: more_elif ELIF r_expr statement_block
   28          | %empty

   29 opt_else: ELSE statement_block
   30         | %empty

   31 statement: WHILE r_expr statement_block
   32          | l_expr opt_ident '=' r_expr ';'

   33 l_expr: IDENT
   34       | r_expr '.' IDENT

   35 statement: r_expr ';'

   36 r_expr: STRING_LIT
   37       | INT_LIT
   38       | l_expr
   39       | r_expr '+' r_expr
   40       | r_expr '-' r_expr
   41       | r_expr '*' r_expr
   42       | r_expr '/' r_expr
   43       | '-' r_expr
   44       | '(' r_expr ')'
   45       | r_expr EQUALS r_expr
   46       | r_expr ATLEAST r_expr
   47       | r_expr ATMOST r_expr
   48       | r_expr '<' r_expr
   49       | r_expr '>' r_expr
   50       | r_expr AND r_expr
   51       | r_expr OR r_expr
   52       | NOT r_expr
   53       | r_expr '.' IDENT '(' actual_args ')'

   54 actual_args: r_expr seq_r_expr
   55            | %empty

   56 seq_r_expr: seq_r_expr ',' r_expr
   57           | %empty

   58 r_expr: IDENT '(' actual_args ')'

   59 statement: RETURN opt_r_expr ';'

   60 opt_r_expr: r_expr
   61           | %empty

   62 statement: TYPECASE r_expr '{' type_alt '}'

   63 type_alt: type_alt IDENT ':' IDENT statement_block
   64         | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 22 44 53 58
')' (41) 10 22 44 53 58
'*' (42) 41
'+' (43) 39
',' (44) 14 56
'-' (45) 40 43
'.' (46) 34 53
'/' (47) 42
':' (58) 15 23 63
';' (59) 32 35 59
'<' (60) 48
'=' (61) 32
'>' (62) 49
'{' (123) 10 25 62
'}' (125) 10 25 62
error (256)
CLASS (258) 10
DEF (259) 22
EXTENDS (260) 16
IF (261) 26
ELIF (262) 27
ELSE (263) 29
WHILE (264) 31
RETURN (265) 59
TYPECASE (266) 62
ATLEAST (267) 46
ATMOST (268) 47
EQUALS (269) 45
AND (270) 50
OR (271) 51
NOT (272) 52
IDENT <str> (273) 10 15 16 22 23 33 34 53 58 63
INT_LIT <num> (274) 37
STRING_LIT <str> (275) 36
NEG (276)
Abstract (277)
syntax (278)
tree (279)
nodes (280)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program <block> (42)
    on left: 1, on right: 0
opt_classes <block> (43)
    on left: 2 3, on right: 1
classes <block> (44)
    on left: 4 5, on right: 2 4
opt_statements <block> (45)
    on left: 6 7, on right: 1 10 25
statements <block> (46)
    on left: 8 9, on right: 6 8
class <clazz> (47)
    on left: 10, on right: 4 5
formal_args <block> (48)
    on left: 11 12, on right: 10 22
args <block> (49)
    on left: 13 14, on right: 11 14
arg <arg> (50)
    on left: 15, on right: 13 14
opt_extends <ident> (51)
    on left: 16 17, on right: 10
opt_methods <block> (52)
    on left: 18 19, on right: 10
methods <block> (53)
    on left: 20 21, on right: 18 20
method <stub> (54)
    on left: 22, on right: 20 21
opt_ident (55)
    on left: 23 24, on right: 22 32
statement_block (56)
    on left: 25, on right: 22 26 27 29 31 63
statement <stub> (57)
    on left: 26 31 32 35 59 62, on right: 8 9
more_elif (58)
    on left: 27 28, on right: 26 27
opt_else (59)
    on left: 29 30, on right: 26
l_expr (60)
    on left: 33 34, on right: 32 38
r_expr (61)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    58, on right: 26 27 31 32 34 35 39 40 41 42 43 44 45 46 47 48 49
    50 51 52 53 54 56 60 62
actual_args (62)
    on left: 54 55, on right: 53 58
seq_r_expr (63)
    on left: 56 57, on right: 54 56
opt_r_expr (64)
    on left: 60 61, on right: 59
type_alt (65)
    on left: 63 64, on right: 62 63


State 0

    0 $accept: . program $end
    1 program: . opt_classes opt_statements
    2 opt_classes: . classes
    3            | . %empty  [$end, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(']
    4 classes: . classes class
    5        | . class
   10 class: . CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements opt_methods '}'

    CLASS  shift, and go to state 1

    $default  reduce using rule 3 (opt_classes)

    program      go to state 2
    opt_classes  go to state 3
    classes      go to state 4
    class        go to state 5


State 1

   10 class: CLASS . IDENT '(' formal_args ')' opt_extends '{' opt_statements opt_methods '}'

    IDENT  shift, and go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: opt_classes . opt_statements
    6 opt_statements: . statements
    7               | . %empty  [$end]
    8 statements: . statements statement
    9           | . statement
   26 statement: . IF r_expr statement_block more_elif opt_else
   31          | . WHILE r_expr statement_block
   32          | . l_expr opt_ident '=' r_expr ';'
   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   35 statement: . r_expr ';'
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'
   59 statement: . RETURN opt_r_expr ';'
   62          | . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    TYPECASE    shift, and go to state 11
    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 7 (opt_statements)

    opt_statements  go to state 18
    statements      go to state 19
    statement       go to state 20
    l_expr          go to state 21
    r_expr          go to state 22


State 4

    2 opt_classes: classes .  [$end, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(']
    4 classes: classes . class
   10 class: . CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements opt_methods '}'

    CLASS  shift, and go to state 1

    $default  reduce using rule 2 (opt_classes)

    class  go to state 23


State 5

    5 classes: class .

    $default  reduce using rule 5 (classes)


State 6

   10 class: CLASS IDENT . '(' formal_args ')' opt_extends '{' opt_statements opt_methods '}'

    '('  shift, and go to state 24


State 7

    0 $accept: program $end .

    $default  accept


State 8

   26 statement: IF . r_expr statement_block more_elif opt_else
   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 26


State 9

   31 statement: WHILE . r_expr statement_block
   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 27


State 10

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'
   59 statement: RETURN . opt_r_expr ';'
   60 opt_r_expr: . r_expr
   61           | . %empty  [';']

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 61 (opt_r_expr)

    l_expr      go to state 25
    r_expr      go to state 28
    opt_r_expr  go to state 29


State 11

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'
   62 statement: TYPECASE . r_expr '{' type_alt '}'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 30


State 12

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   52       | NOT . r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 31


State 13

   33 l_expr: IDENT .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', '.', ')', '{', ',', ':', '=', ';']
   58 r_expr: IDENT . '(' actual_args ')'

    '('  shift, and go to state 32

    $default  reduce using rule 33 (l_expr)


State 14

   37 r_expr: INT_LIT .

    $default  reduce using rule 37 (r_expr)


State 15

   36 r_expr: STRING_LIT .

    $default  reduce using rule 36 (r_expr)


State 16

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   43       | '-' . r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 33


State 17

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   44       | '(' . r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 34


State 18

    1 program: opt_classes opt_statements .

    $default  reduce using rule 1 (program)


State 19

    6 opt_statements: statements .  [$end, DEF, '}']
    8 statements: statements . statement
   26 statement: . IF r_expr statement_block more_elif opt_else
   31          | . WHILE r_expr statement_block
   32          | . l_expr opt_ident '=' r_expr ';'
   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   35 statement: . r_expr ';'
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'
   59 statement: . RETURN opt_r_expr ';'
   62          | . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    TYPECASE    shift, and go to state 11
    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 6 (opt_statements)

    statement  go to state 35
    l_expr     go to state 21
    r_expr     go to state 22


State 20

    9 statements: statement .

    $default  reduce using rule 9 (statements)


State 21

   23 opt_ident: . ':' IDENT
   24          | . %empty  ['=']
   32 statement: l_expr . opt_ident '=' r_expr ';'
   38 r_expr: l_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', '.', ';']

    ':'  shift, and go to state 36

    '='       reduce using rule 24 (opt_ident)
    $default  reduce using rule 38 (r_expr)

    opt_ident  go to state 37


State 22

   34 l_expr: r_expr . '.' IDENT
   35 statement: r_expr . ';'
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    ';'      shift, and go to state 50


State 23

    4 classes: classes class .

    $default  reduce using rule 4 (classes)


State 24

   10 class: CLASS IDENT '(' . formal_args ')' opt_extends '{' opt_statements opt_methods '}'
   11 formal_args: . args
   12            | . %empty  [')']
   13 args: . arg
   14     | . args ',' arg
   15 arg: . IDENT ':' IDENT

    IDENT  shift, and go to state 51

    $default  reduce using rule 12 (formal_args)

    formal_args  go to state 52
    args         go to state 53
    arg          go to state 54


State 25

   38 r_expr: l_expr .

    $default  reduce using rule 38 (r_expr)


State 26

   25 statement_block: . '{' opt_statements '}'
   26 statement: IF r_expr . statement_block more_elif opt_else
   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 55

    statement_block  go to state 56


State 27

   25 statement_block: . '{' opt_statements '}'
   31 statement: WHILE r_expr . statement_block
   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 55

    statement_block  go to state 57


State 28

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'
   60 opt_r_expr: r_expr .  [';']

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 60 (opt_r_expr)


State 29

   59 statement: RETURN opt_r_expr . ';'

    ';'  shift, and go to state 58


State 30

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'
   62 statement: TYPECASE r_expr . '{' type_alt '}'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 59


State 31

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   52       | NOT r_expr .  [AND, OR, ')', '{', ',', ';']
   53       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 52 (r_expr)

    Conflict between rule 52 and token ATLEAST resolved as shift (NOT < ATLEAST).
    Conflict between rule 52 and token ATMOST resolved as shift (NOT < ATMOST).
    Conflict between rule 52 and token EQUALS resolved as shift (NOT < EQUALS).
    Conflict between rule 52 and token AND resolved as reduce (%left AND).
    Conflict between rule 52 and token OR resolved as reduce (%left OR).
    Conflict between rule 52 and token '>' resolved as shift (NOT < '>').
    Conflict between rule 52 and token '<' resolved as shift (NOT < '<').
    Conflict between rule 52 and token '+' resolved as shift (NOT < '+').
    Conflict between rule 52 and token '-' resolved as shift (NOT < '-').
    Conflict between rule 52 and token '*' resolved as shift (NOT < '*').
    Conflict between rule 52 and token '/' resolved as shift (NOT < '/').
    Conflict between rule 52 and token '.' resolved as shift (NOT < '.').


State 32

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   54 actual_args: . r_expr seq_r_expr
   55            | . %empty  [')']
   58 r_expr: . IDENT '(' actual_args ')'
   58       | IDENT '(' . actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 55 (actual_args)

    l_expr       go to state 25
    r_expr       go to state 60
    actual_args  go to state 61


State 33

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   43       | '-' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', '{', ',', ';']
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 43 (r_expr)

    Conflict between rule 43 and token ATLEAST resolved as reduce (ATLEAST < '-').
    Conflict between rule 43 and token ATMOST resolved as reduce (ATMOST < '-').
    Conflict between rule 43 and token EQUALS resolved as reduce (EQUALS < '-').
    Conflict between rule 43 and token AND resolved as reduce (AND < '-').
    Conflict between rule 43 and token OR resolved as reduce (OR < '-').
    Conflict between rule 43 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 43 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 43 and token '+' resolved as reduce (%left '+').
    Conflict between rule 43 and token '-' resolved as reduce (%left '-').
    Conflict between rule 43 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 43 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 43 and token '.' resolved as shift ('-' < '.').


State 34

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   44       | '(' r_expr . ')'
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    ')'      shift, and go to state 62


State 35

    8 statements: statements statement .

    $default  reduce using rule 8 (statements)


State 36

   23 opt_ident: ':' . IDENT

    IDENT  shift, and go to state 63


State 37

   32 statement: l_expr opt_ident . '=' r_expr ';'

    '='  shift, and go to state 64


State 38

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   46       | r_expr ATLEAST . r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 65


State 39

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   47       | r_expr ATMOST . r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 66


State 40

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   45       | r_expr EQUALS . r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 67


State 41

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   50       | r_expr AND . r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 68


State 42

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   51       | r_expr OR . r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 69


State 43

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   49       | r_expr '>' . r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 70


State 44

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   48       | r_expr '<' . r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 71


State 45

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   39       | r_expr '+' . r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 72


State 46

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   40       | r_expr '-' . r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 73


State 47

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   41       | r_expr '*' . r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 74


State 48

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   42       | r_expr '/' . r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 75


State 49

   34 l_expr: r_expr '.' . IDENT
   53 r_expr: r_expr '.' . IDENT '(' actual_args ')'

    IDENT  shift, and go to state 76


State 50

   35 statement: r_expr ';' .

    $default  reduce using rule 35 (statement)


State 51

   15 arg: IDENT . ':' IDENT

    ':'  shift, and go to state 77


State 52

   10 class: CLASS IDENT '(' formal_args . ')' opt_extends '{' opt_statements opt_methods '}'

    ')'  shift, and go to state 78


State 53

   11 formal_args: args .  [')']
   14 args: args . ',' arg

    ','  shift, and go to state 79

    $default  reduce using rule 11 (formal_args)


State 54

   13 args: arg .

    $default  reduce using rule 13 (args)


State 55

    6 opt_statements: . statements
    7               | . %empty  ['}']
    8 statements: . statements statement
    9           | . statement
   25 statement_block: '{' . opt_statements '}'
   26 statement: . IF r_expr statement_block more_elif opt_else
   31          | . WHILE r_expr statement_block
   32          | . l_expr opt_ident '=' r_expr ';'
   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   35 statement: . r_expr ';'
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'
   59 statement: . RETURN opt_r_expr ';'
   62          | . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    TYPECASE    shift, and go to state 11
    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 7 (opt_statements)

    opt_statements  go to state 80
    statements      go to state 19
    statement       go to state 20
    l_expr          go to state 21
    r_expr          go to state 22


State 56

   26 statement: IF r_expr statement_block . more_elif opt_else
   27 more_elif: . more_elif ELIF r_expr statement_block
   28          | . %empty

    $default  reduce using rule 28 (more_elif)

    more_elif  go to state 81


State 57

   31 statement: WHILE r_expr statement_block .

    $default  reduce using rule 31 (statement)


State 58

   59 statement: RETURN opt_r_expr ';' .

    $default  reduce using rule 59 (statement)


State 59

   62 statement: TYPECASE r_expr '{' . type_alt '}'
   63 type_alt: . type_alt IDENT ':' IDENT statement_block
   64         | . %empty

    $default  reduce using rule 64 (type_alt)

    type_alt  go to state 82


State 60

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'
   54 actual_args: r_expr . seq_r_expr
   56 seq_r_expr: . seq_r_expr ',' r_expr
   57           | . %empty  [')', ',']

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 57 (seq_r_expr)

    seq_r_expr  go to state 83


State 61

   58 r_expr: IDENT '(' actual_args . ')'

    ')'  shift, and go to state 84


State 62

   44 r_expr: '(' r_expr ')' .

    $default  reduce using rule 44 (r_expr)


State 63

   23 opt_ident: ':' IDENT .

    $default  reduce using rule 23 (opt_ident)


State 64

   32 statement: l_expr opt_ident '=' . r_expr ';'
   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 85


State 65

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   46       | r_expr ATLEAST r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 46 (r_expr)

    Conflict between rule 46 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 46 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 46 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 46 and token AND resolved as reduce (AND < ATLEAST).
    Conflict between rule 46 and token OR resolved as reduce (OR < ATLEAST).
    Conflict between rule 46 and token '>' resolved as reduce (%left '>').
    Conflict between rule 46 and token '<' resolved as reduce (%left '<').
    Conflict between rule 46 and token '+' resolved as shift (ATLEAST < '+').
    Conflict between rule 46 and token '-' resolved as shift (ATLEAST < '-').
    Conflict between rule 46 and token '*' resolved as shift (ATLEAST < '*').
    Conflict between rule 46 and token '/' resolved as shift (ATLEAST < '/').
    Conflict between rule 46 and token '.' resolved as shift (ATLEAST < '.').


State 66

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   47       | r_expr ATMOST r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 47 (r_expr)

    Conflict between rule 47 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 47 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 47 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 47 and token AND resolved as reduce (AND < ATMOST).
    Conflict between rule 47 and token OR resolved as reduce (OR < ATMOST).
    Conflict between rule 47 and token '>' resolved as reduce (%left '>').
    Conflict between rule 47 and token '<' resolved as reduce (%left '<').
    Conflict between rule 47 and token '+' resolved as shift (ATMOST < '+').
    Conflict between rule 47 and token '-' resolved as shift (ATMOST < '-').
    Conflict between rule 47 and token '*' resolved as shift (ATMOST < '*').
    Conflict between rule 47 and token '/' resolved as shift (ATMOST < '/').
    Conflict between rule 47 and token '.' resolved as shift (ATMOST < '.').


State 67

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   45       | r_expr EQUALS r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 45 (r_expr)

    Conflict between rule 45 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 45 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 45 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 45 and token AND resolved as reduce (AND < EQUALS).
    Conflict between rule 45 and token OR resolved as reduce (OR < EQUALS).
    Conflict between rule 45 and token '>' resolved as reduce (%left '>').
    Conflict between rule 45 and token '<' resolved as reduce (%left '<').
    Conflict between rule 45 and token '+' resolved as shift (EQUALS < '+').
    Conflict between rule 45 and token '-' resolved as shift (EQUALS < '-').
    Conflict between rule 45 and token '*' resolved as shift (EQUALS < '*').
    Conflict between rule 45 and token '/' resolved as shift (EQUALS < '/').
    Conflict between rule 45 and token '.' resolved as shift (EQUALS < '.').


State 68

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   50       | r_expr AND r_expr .  [AND, OR, ')', '{', ',', ';']
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 50 (r_expr)

    Conflict between rule 50 and token ATLEAST resolved as shift (AND < ATLEAST).
    Conflict between rule 50 and token ATMOST resolved as shift (AND < ATMOST).
    Conflict between rule 50 and token EQUALS resolved as shift (AND < EQUALS).
    Conflict between rule 50 and token AND resolved as reduce (%left AND).
    Conflict between rule 50 and token OR resolved as reduce (%left OR).
    Conflict between rule 50 and token '>' resolved as shift (AND < '>').
    Conflict between rule 50 and token '<' resolved as shift (AND < '<').
    Conflict between rule 50 and token '+' resolved as shift (AND < '+').
    Conflict between rule 50 and token '-' resolved as shift (AND < '-').
    Conflict between rule 50 and token '*' resolved as shift (AND < '*').
    Conflict between rule 50 and token '/' resolved as shift (AND < '/').
    Conflict between rule 50 and token '.' resolved as shift (AND < '.').


State 69

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   51       | r_expr OR r_expr .  [AND, OR, ')', '{', ',', ';']
   53       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 51 (r_expr)

    Conflict between rule 51 and token ATLEAST resolved as shift (OR < ATLEAST).
    Conflict between rule 51 and token ATMOST resolved as shift (OR < ATMOST).
    Conflict between rule 51 and token EQUALS resolved as shift (OR < EQUALS).
    Conflict between rule 51 and token AND resolved as reduce (%left AND).
    Conflict between rule 51 and token OR resolved as reduce (%left OR).
    Conflict between rule 51 and token '>' resolved as shift (OR < '>').
    Conflict between rule 51 and token '<' resolved as shift (OR < '<').
    Conflict between rule 51 and token '+' resolved as shift (OR < '+').
    Conflict between rule 51 and token '-' resolved as shift (OR < '-').
    Conflict between rule 51 and token '*' resolved as shift (OR < '*').
    Conflict between rule 51 and token '/' resolved as shift (OR < '/').
    Conflict between rule 51 and token '.' resolved as shift (OR < '.').


State 70

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   49       | r_expr '>' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 49 (r_expr)

    Conflict between rule 49 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 49 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 49 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 49 and token AND resolved as reduce (AND < '>').
    Conflict between rule 49 and token OR resolved as reduce (OR < '>').
    Conflict between rule 49 and token '>' resolved as reduce (%left '>').
    Conflict between rule 49 and token '<' resolved as reduce (%left '<').
    Conflict between rule 49 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 49 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 49 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 49 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 49 and token '.' resolved as shift ('>' < '.').


State 71

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   48       | r_expr '<' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', '{', ',', ';']
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 48 (r_expr)

    Conflict between rule 48 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 48 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 48 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 48 and token AND resolved as reduce (AND < '<').
    Conflict between rule 48 and token OR resolved as reduce (OR < '<').
    Conflict between rule 48 and token '>' resolved as reduce (%left '>').
    Conflict between rule 48 and token '<' resolved as reduce (%left '<').
    Conflict between rule 48 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 48 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 48 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 48 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 48 and token '.' resolved as shift ('<' < '.').


State 72

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   39       | r_expr '+' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', '{', ',', ';']
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 39 (r_expr)

    Conflict between rule 39 and token ATLEAST resolved as reduce (ATLEAST < '+').
    Conflict between rule 39 and token ATMOST resolved as reduce (ATMOST < '+').
    Conflict between rule 39 and token EQUALS resolved as reduce (EQUALS < '+').
    Conflict between rule 39 and token AND resolved as reduce (AND < '+').
    Conflict between rule 39 and token OR resolved as reduce (OR < '+').
    Conflict between rule 39 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 39 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 39 and token '+' resolved as reduce (%left '+').
    Conflict between rule 39 and token '-' resolved as reduce (%left '-').
    Conflict between rule 39 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 39 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 39 and token '.' resolved as shift ('+' < '.').


State 73

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   40       | r_expr '-' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', '{', ',', ';']
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 40 (r_expr)

    Conflict between rule 40 and token ATLEAST resolved as reduce (ATLEAST < '-').
    Conflict between rule 40 and token ATMOST resolved as reduce (ATMOST < '-').
    Conflict between rule 40 and token EQUALS resolved as reduce (EQUALS < '-').
    Conflict between rule 40 and token AND resolved as reduce (AND < '-').
    Conflict between rule 40 and token OR resolved as reduce (OR < '-').
    Conflict between rule 40 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 40 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 40 and token '+' resolved as reduce (%left '+').
    Conflict between rule 40 and token '-' resolved as reduce (%left '-').
    Conflict between rule 40 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 40 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 40 and token '.' resolved as shift ('-' < '.').


State 74

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   41       | r_expr '*' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', ')', '{', ',', ';']
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '.'  shift, and go to state 49

    $default  reduce using rule 41 (r_expr)

    Conflict between rule 41 and token ATLEAST resolved as reduce (ATLEAST < '*').
    Conflict between rule 41 and token ATMOST resolved as reduce (ATMOST < '*').
    Conflict between rule 41 and token EQUALS resolved as reduce (EQUALS < '*').
    Conflict between rule 41 and token AND resolved as reduce (AND < '*').
    Conflict between rule 41 and token OR resolved as reduce (OR < '*').
    Conflict between rule 41 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 41 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 41 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 41 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 41 and token '*' resolved as reduce (%left '*').
    Conflict between rule 41 and token '/' resolved as reduce (%left '/').
    Conflict between rule 41 and token '.' resolved as shift ('*' < '.').


State 75

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   42       | r_expr '/' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', ')', '{', ',', ';']
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    '.'  shift, and go to state 49

    $default  reduce using rule 42 (r_expr)

    Conflict between rule 42 and token ATLEAST resolved as reduce (ATLEAST < '/').
    Conflict between rule 42 and token ATMOST resolved as reduce (ATMOST < '/').
    Conflict between rule 42 and token EQUALS resolved as reduce (EQUALS < '/').
    Conflict between rule 42 and token AND resolved as reduce (AND < '/').
    Conflict between rule 42 and token OR resolved as reduce (OR < '/').
    Conflict between rule 42 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 42 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 42 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 42 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 42 and token '*' resolved as reduce (%left '*').
    Conflict between rule 42 and token '/' resolved as reduce (%left '/').
    Conflict between rule 42 and token '.' resolved as shift ('/' < '.').


State 76

   34 l_expr: r_expr '.' IDENT .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', '.', ')', '{', ',', ':', '=', ';']
   53 r_expr: r_expr '.' IDENT . '(' actual_args ')'

    '('  shift, and go to state 86

    $default  reduce using rule 34 (l_expr)


State 77

   15 arg: IDENT ':' . IDENT

    IDENT  shift, and go to state 87


State 78

   10 class: CLASS IDENT '(' formal_args ')' . opt_extends '{' opt_statements opt_methods '}'
   16 opt_extends: . EXTENDS IDENT
   17            | . %empty  ['{']

    EXTENDS  shift, and go to state 88

    $default  reduce using rule 17 (opt_extends)

    opt_extends  go to state 89


State 79

   14 args: args ',' . arg
   15 arg: . IDENT ':' IDENT

    IDENT  shift, and go to state 51

    arg  go to state 90


State 80

   25 statement_block: '{' opt_statements . '}'

    '}'  shift, and go to state 91


State 81

   26 statement: IF r_expr statement_block more_elif . opt_else
   27 more_elif: more_elif . ELIF r_expr statement_block
   29 opt_else: . ELSE statement_block
   30         | . %empty  [$end, DEF, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(', '}']

    ELIF  shift, and go to state 92
    ELSE  shift, and go to state 93

    $default  reduce using rule 30 (opt_else)

    opt_else  go to state 94


State 82

   62 statement: TYPECASE r_expr '{' type_alt . '}'
   63 type_alt: type_alt . IDENT ':' IDENT statement_block

    IDENT  shift, and go to state 95
    '}'    shift, and go to state 96


State 83

   54 actual_args: r_expr seq_r_expr .  [')']
   56 seq_r_expr: seq_r_expr . ',' r_expr

    ','  shift, and go to state 97

    $default  reduce using rule 54 (actual_args)


State 84

   58 r_expr: IDENT '(' actual_args ')' .

    $default  reduce using rule 58 (r_expr)


State 85

   32 statement: l_expr opt_ident '=' r_expr . ';'
   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    ';'      shift, and go to state 98


State 86

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   53       | r_expr '.' IDENT '(' . actual_args ')'
   54 actual_args: . r_expr seq_r_expr
   55            | . %empty  [')']
   58 r_expr: . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 55 (actual_args)

    l_expr       go to state 25
    r_expr       go to state 60
    actual_args  go to state 99


State 87

   15 arg: IDENT ':' IDENT .

    $default  reduce using rule 15 (arg)


State 88

   16 opt_extends: EXTENDS . IDENT

    IDENT  shift, and go to state 100


State 89

   10 class: CLASS IDENT '(' formal_args ')' opt_extends . '{' opt_statements opt_methods '}'

    '{'  shift, and go to state 101


State 90

   14 args: args ',' arg .

    $default  reduce using rule 14 (args)


State 91

   25 statement_block: '{' opt_statements '}' .

    $default  reduce using rule 25 (statement_block)


State 92

   27 more_elif: more_elif ELIF . r_expr statement_block
   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 102


State 93

   25 statement_block: . '{' opt_statements '}'
   29 opt_else: ELSE . statement_block

    '{'  shift, and go to state 55

    statement_block  go to state 103


State 94

   26 statement: IF r_expr statement_block more_elif opt_else .

    $default  reduce using rule 26 (statement)


State 95

   63 type_alt: type_alt IDENT . ':' IDENT statement_block

    ':'  shift, and go to state 104


State 96

   62 statement: TYPECASE r_expr '{' type_alt '}' .

    $default  reduce using rule 62 (statement)


State 97

   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   56 seq_r_expr: seq_r_expr ',' . r_expr
   58 r_expr: . IDENT '(' actual_args ')'

    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    l_expr  go to state 25
    r_expr  go to state 105


State 98

   32 statement: l_expr opt_ident '=' r_expr ';' .

    $default  reduce using rule 32 (statement)


State 99

   53 r_expr: r_expr '.' IDENT '(' actual_args . ')'

    ')'  shift, and go to state 106


State 100

   16 opt_extends: EXTENDS IDENT .

    $default  reduce using rule 16 (opt_extends)


State 101

    6 opt_statements: . statements
    7               | . %empty  [DEF, '}']
    8 statements: . statements statement
    9           | . statement
   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' . opt_statements opt_methods '}'
   26 statement: . IF r_expr statement_block more_elif opt_else
   31          | . WHILE r_expr statement_block
   32          | . l_expr opt_ident '=' r_expr ';'
   33 l_expr: . IDENT
   34       | . r_expr '.' IDENT
   35 statement: . r_expr ';'
   36 r_expr: . STRING_LIT
   37       | . INT_LIT
   38       | . l_expr
   39       | . r_expr '+' r_expr
   40       | . r_expr '-' r_expr
   41       | . r_expr '*' r_expr
   42       | . r_expr '/' r_expr
   43       | . '-' r_expr
   44       | . '(' r_expr ')'
   45       | . r_expr EQUALS r_expr
   46       | . r_expr ATLEAST r_expr
   47       | . r_expr ATMOST r_expr
   48       | . r_expr '<' r_expr
   49       | . r_expr '>' r_expr
   50       | . r_expr AND r_expr
   51       | . r_expr OR r_expr
   52       | . NOT r_expr
   53       | . r_expr '.' IDENT '(' actual_args ')'
   58       | . IDENT '(' actual_args ')'
   59 statement: . RETURN opt_r_expr ';'
   62          | . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 8
    WHILE       shift, and go to state 9
    RETURN      shift, and go to state 10
    TYPECASE    shift, and go to state 11
    NOT         shift, and go to state 12
    IDENT       shift, and go to state 13
    INT_LIT     shift, and go to state 14
    STRING_LIT  shift, and go to state 15
    '-'         shift, and go to state 16
    '('         shift, and go to state 17

    $default  reduce using rule 7 (opt_statements)

    opt_statements  go to state 107
    statements      go to state 19
    statement       go to state 20
    l_expr          go to state 21
    r_expr          go to state 22


State 102

   25 statement_block: . '{' opt_statements '}'
   27 more_elif: more_elif ELIF r_expr . statement_block
   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 55

    statement_block  go to state 108


State 103

   29 opt_else: ELSE statement_block .

    $default  reduce using rule 29 (opt_else)


State 104

   63 type_alt: type_alt IDENT ':' . IDENT statement_block

    IDENT  shift, and go to state 109


State 105

   34 l_expr: r_expr . '.' IDENT
   39 r_expr: r_expr . '+' r_expr
   40       | r_expr . '-' r_expr
   41       | r_expr . '*' r_expr
   42       | r_expr . '/' r_expr
   45       | r_expr . EQUALS r_expr
   46       | r_expr . ATLEAST r_expr
   47       | r_expr . ATMOST r_expr
   48       | r_expr . '<' r_expr
   49       | r_expr . '>' r_expr
   50       | r_expr . AND r_expr
   51       | r_expr . OR r_expr
   53       | r_expr . '.' IDENT '(' actual_args ')'
   56 seq_r_expr: seq_r_expr ',' r_expr .  [')', ',']

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 56 (seq_r_expr)


State 106

   53 r_expr: r_expr '.' IDENT '(' actual_args ')' .

    $default  reduce using rule 53 (r_expr)


State 107

   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements . opt_methods '}'
   18 opt_methods: . methods
   19            | . %empty  ['}']
   20 methods: . methods method
   21        | . method
   22 method: . DEF IDENT '(' formal_args ')' opt_ident statement_block

    DEF  shift, and go to state 110

    $default  reduce using rule 19 (opt_methods)

    opt_methods  go to state 111
    methods      go to state 112
    method       go to state 113


State 108

   27 more_elif: more_elif ELIF r_expr statement_block .

    $default  reduce using rule 27 (more_elif)


State 109

   25 statement_block: . '{' opt_statements '}'
   63 type_alt: type_alt IDENT ':' IDENT . statement_block

    '{'  shift, and go to state 55

    statement_block  go to state 114


State 110

   22 method: DEF . IDENT '(' formal_args ')' opt_ident statement_block

    IDENT  shift, and go to state 115


State 111

   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements opt_methods . '}'

    '}'  shift, and go to state 116


State 112

   18 opt_methods: methods .  ['}']
   20 methods: methods . method
   22 method: . DEF IDENT '(' formal_args ')' opt_ident statement_block

    DEF  shift, and go to state 110

    $default  reduce using rule 18 (opt_methods)

    method  go to state 117


State 113

   21 methods: method .

    $default  reduce using rule 21 (methods)


State 114

   63 type_alt: type_alt IDENT ':' IDENT statement_block .

    $default  reduce using rule 63 (type_alt)


State 115

   22 method: DEF IDENT . '(' formal_args ')' opt_ident statement_block

    '('  shift, and go to state 118


State 116

   10 class: CLASS IDENT '(' formal_args ')' opt_extends '{' opt_statements opt_methods '}' .

    $default  reduce using rule 10 (class)


State 117

   20 methods: methods method .

    $default  reduce using rule 20 (methods)


State 118

   11 formal_args: . args
   12            | . %empty  [')']
   13 args: . arg
   14     | . args ',' arg
   15 arg: . IDENT ':' IDENT
   22 method: DEF IDENT '(' . formal_args ')' opt_ident statement_block

    IDENT  shift, and go to state 51

    $default  reduce using rule 12 (formal_args)

    formal_args  go to state 119
    args         go to state 53
    arg          go to state 54


State 119

   22 method: DEF IDENT '(' formal_args . ')' opt_ident statement_block

    ')'  shift, and go to state 120


State 120

   22 method: DEF IDENT '(' formal_args ')' . opt_ident statement_block
   23 opt_ident: . ':' IDENT
   24          | . %empty  ['{']

    ':'  shift, and go to state 36

    $default  reduce using rule 24 (opt_ident)

    opt_ident  go to state 121


State 121

   22 method: DEF IDENT '(' formal_args ')' opt_ident . statement_block
   25 statement_block: . '{' opt_statements '}'

    '{'  shift, and go to state 55

    statement_block  go to state 122


State 122

   22 method: DEF IDENT '(' formal_args ')' opt_ident statement_block .

    $default  reduce using rule 22 (method)
