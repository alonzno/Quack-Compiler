Nonterminals useless in grammar

   more_idents


Terminals unused in grammar

   NEG
   Abstract
   syntax
   tree
   nodes


Rules useless in grammar

   62 more_idents: more_idents ',' IDENT ':' IDENT
   63            | %empty


Grammar

    0 $accept: program $end

    1 program: classes statements

    2 classes: classes class
    3        | %empty

    4 statements: statements statement
    5           | %empty

    6 class: class_signature class_body

    7 class_signature: CLASS IDENT '(' formal_args ')' opt_extends

    8 formal_args: args
    9            | %empty

   10 args: arg
   11     | arg ',' arg

   12 arg: IDENT ':' IDENT

   13 opt_extends: EXTENDS IDENT
   14            | %empty

   15 class_body: '{' statements methods '}'

   16 methods: methods method
   17        | %empty

   18 method: DEF IDENT '(' formal_args ')' opt_ident statement_block

   19 opt_ident: ':' IDENT
   20          | %empty

   21 statement_block: '{' statements '}'

   22 statement: IF r_expr statement_block more_elif opt_else

   23 more_elif: more_elif ELIF r_expr statement_block
   24          | %empty

   25 opt_else: ELSE statement_block
   26         | %empty

   27 statement: WHILE r_expr statement_block
   28          | l_expr opt_ident '=' r_expr ';'

   29 l_expr: IDENT
   30       | r_expr '.' IDENT

   31 statement: r_expr ';'

   32 r_expr: STRING_LIT
   33       | INT_LIT
   34       | l_expr
   35       | r_expr '+' r_expr
   36       | r_expr '-' r_expr
   37       | r_expr '*' r_expr
   38       | r_expr '/' r_expr
   39       | '-' r_expr
   40       | '(' r_expr ')'
   41       | r_expr EQUALS r_expr
   42       | r_expr ATLEAST r_expr
   43       | r_expr ATMOST r_expr
   44       | r_expr '<' r_expr
   45       | r_expr '>' r_expr
   46       | r_expr AND r_expr
   47       | r_expr OR r_expr
   48       | NOT r_expr
   49       | r_expr '.' IDENT '(' actual_args ')'

   50 actual_args: r_expr seq_r_expr
   51            | %empty

   52 seq_r_expr: seq_r_expr ',' r_expr
   53           | %empty

   54 r_expr: IDENT '(' actual_args ')'

   55 statement: RETURN opt_r_expr ';'

   56 opt_r_expr: r_expr
   57           | %empty

   58 statement: typecase

   59 typecase: TYPECASE r_expr '{' type_alt '}'

   60 type_alt: type_alt IDENT ':' IDENT statement_block
   61         | %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 18 40 49 54
')' (41) 7 18 40 49 54
'*' (42) 37
'+' (43) 35
',' (44) 11 52
'-' (45) 36 39
'.' (46) 30 49
'/' (47) 38
':' (58) 12 19 60
';' (59) 28 31 55
'<' (60) 44
'=' (61) 28
'>' (62) 45
'{' (123) 15 21 59
'}' (125) 15 21 59
error (256)
CLASS (258) 7
DEF (259) 18
EXTENDS (260) 13
IF (261) 22
ELIF (262) 23
ELSE (263) 25
WHILE (264) 27
RETURN (265) 55
TYPECASE (266) 59
ATLEAST (267) 42
ATMOST (268) 43
EQUALS (269) 41
AND (270) 46
OR (271) 47
NOT (272) 48
IDENT <str> (273) 7 12 13 18 19 29 30 49 54 60
INT_LIT <num> (274) 33
STRING_LIT <str> (275) 32
NEG (276)
Abstract (277)
syntax (278)
tree (279)
nodes (280)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program <block> (42)
    on left: 1, on right: 0
classes <block> (43)
    on left: 2 3, on right: 1 2
statements <block> (44)
    on left: 4 5, on right: 1 4 15 21
class <clazz> (45)
    on left: 6, on right: 2
class_signature (46)
    on left: 7, on right: 6
formal_args (47)
    on left: 8 9, on right: 7 18
args (48)
    on left: 10 11, on right: 8
arg <arg> (49)
    on left: 12, on right: 10 11
opt_extends <ident> (50)
    on left: 13 14, on right: 7
class_body (51)
    on left: 15, on right: 6
methods <stub> (52)
    on left: 16 17, on right: 15 16
method (53)
    on left: 18, on right: 16
opt_ident (54)
    on left: 19 20, on right: 18 28
statement_block (55)
    on left: 21, on right: 18 22 23 25 27 60
statement (56)
    on left: 22 27 28 31 55 58, on right: 4
more_elif (57)
    on left: 23 24, on right: 22 23
opt_else (58)
    on left: 25 26, on right: 22
l_expr (59)
    on left: 29 30, on right: 28 34
r_expr (60)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    54, on right: 22 23 27 28 30 31 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49 50 52 56 59
actual_args (61)
    on left: 50 51, on right: 49 54
seq_r_expr (62)
    on left: 52 53, on right: 50 52
opt_r_expr (63)
    on left: 56 57, on right: 55
typecase (64)
    on left: 59, on right: 58
type_alt (65)
    on left: 60 61, on right: 59 60


State 0

    0 $accept: . program $end
    1 program: . classes statements
    2 classes: . classes class
    3        | . %empty

    $default  reduce using rule 3 (classes)

    program  go to state 1
    classes  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: classes . statements
    2 classes: classes . class
    4 statements: . statements statement
    5           | . %empty  [$end, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(']
    6 class: . class_signature class_body
    7 class_signature: . CLASS IDENT '(' formal_args ')' opt_extends

    CLASS  shift, and go to state 4

    $default  reduce using rule 5 (statements)

    statements       go to state 5
    class            go to state 6
    class_signature  go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    7 class_signature: CLASS . IDENT '(' formal_args ')' opt_extends

    IDENT  shift, and go to state 8


State 5

    1 program: classes statements .  [$end]
    4 statements: statements . statement
   22 statement: . IF r_expr statement_block more_elif opt_else
   27          | . WHILE r_expr statement_block
   28          | . l_expr opt_ident '=' r_expr ';'
   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   31 statement: . r_expr ';'
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'
   55 statement: . RETURN opt_r_expr ';'
   58          | . typecase
   59 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    RETURN      shift, and go to state 11
    TYPECASE    shift, and go to state 12
    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 1 (program)

    statement  go to state 19
    l_expr     go to state 20
    r_expr     go to state 21
    typecase   go to state 22


State 6

    2 classes: classes class .

    $default  reduce using rule 2 (classes)


State 7

    6 class: class_signature . class_body
   15 class_body: . '{' statements methods '}'

    '{'  shift, and go to state 23

    class_body  go to state 24


State 8

    7 class_signature: CLASS IDENT . '(' formal_args ')' opt_extends

    '('  shift, and go to state 25


State 9

   22 statement: IF . r_expr statement_block more_elif opt_else
   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 27


State 10

   27 statement: WHILE . r_expr statement_block
   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 28


State 11

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'
   55 statement: RETURN . opt_r_expr ';'
   56 opt_r_expr: . r_expr
   57           | . %empty  [';']

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 57 (opt_r_expr)

    l_expr      go to state 26
    r_expr      go to state 29
    opt_r_expr  go to state 30


State 12

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'
   59 typecase: TYPECASE . r_expr '{' type_alt '}'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 31


State 13

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   48       | NOT . r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 32


State 14

   29 l_expr: IDENT .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', '.', ')', ',', ':', '{', '=', ';']
   54 r_expr: IDENT . '(' actual_args ')'

    '('  shift, and go to state 33

    $default  reduce using rule 29 (l_expr)


State 15

   33 r_expr: INT_LIT .

    $default  reduce using rule 33 (r_expr)


State 16

   32 r_expr: STRING_LIT .

    $default  reduce using rule 32 (r_expr)


State 17

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   39       | '-' . r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 34


State 18

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   40       | '(' . r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 35


State 19

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


State 20

   19 opt_ident: . ':' IDENT
   20          | . %empty  ['=']
   28 statement: l_expr . opt_ident '=' r_expr ';'
   34 r_expr: l_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', '.', ';']

    ':'  shift, and go to state 36

    '='       reduce using rule 20 (opt_ident)
    $default  reduce using rule 34 (r_expr)

    opt_ident  go to state 37


State 21

   30 l_expr: r_expr . '.' IDENT
   31 statement: r_expr . ';'
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    ';'      shift, and go to state 50


State 22

   58 statement: typecase .

    $default  reduce using rule 58 (statement)


State 23

    4 statements: . statements statement
    5           | . %empty
   15 class_body: '{' . statements methods '}'

    $default  reduce using rule 5 (statements)

    statements  go to state 51


State 24

    6 class: class_signature class_body .

    $default  reduce using rule 6 (class)


State 25

    7 class_signature: CLASS IDENT '(' . formal_args ')' opt_extends
    8 formal_args: . args
    9            | . %empty  [')']
   10 args: . arg
   11     | . arg ',' arg
   12 arg: . IDENT ':' IDENT

    IDENT  shift, and go to state 52

    $default  reduce using rule 9 (formal_args)

    formal_args  go to state 53
    args         go to state 54
    arg          go to state 55


State 26

   34 r_expr: l_expr .

    $default  reduce using rule 34 (r_expr)


State 27

   21 statement_block: . '{' statements '}'
   22 statement: IF r_expr . statement_block more_elif opt_else
   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 56

    statement_block  go to state 57


State 28

   21 statement_block: . '{' statements '}'
   27 statement: WHILE r_expr . statement_block
   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 56

    statement_block  go to state 58


State 29

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'
   56 opt_r_expr: r_expr .  [';']

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 56 (opt_r_expr)


State 30

   55 statement: RETURN opt_r_expr . ';'

    ';'  shift, and go to state 59


State 31

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'
   59 typecase: TYPECASE r_expr . '{' type_alt '}'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 60


State 32

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   48       | NOT r_expr .  [AND, OR, ')', ',', '{', ';']
   49       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 48 (r_expr)

    Conflict between rule 48 and token ATLEAST resolved as shift (NOT < ATLEAST).
    Conflict between rule 48 and token ATMOST resolved as shift (NOT < ATMOST).
    Conflict between rule 48 and token EQUALS resolved as shift (NOT < EQUALS).
    Conflict between rule 48 and token AND resolved as reduce (%left AND).
    Conflict between rule 48 and token OR resolved as reduce (%left OR).
    Conflict between rule 48 and token '>' resolved as shift (NOT < '>').
    Conflict between rule 48 and token '<' resolved as shift (NOT < '<').
    Conflict between rule 48 and token '+' resolved as shift (NOT < '+').
    Conflict between rule 48 and token '-' resolved as shift (NOT < '-').
    Conflict between rule 48 and token '*' resolved as shift (NOT < '*').
    Conflict between rule 48 and token '/' resolved as shift (NOT < '/').
    Conflict between rule 48 and token '.' resolved as shift (NOT < '.').


State 33

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   50 actual_args: . r_expr seq_r_expr
   51            | . %empty  [')']
   54 r_expr: . IDENT '(' actual_args ')'
   54       | IDENT '(' . actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 51 (actual_args)

    l_expr       go to state 26
    r_expr       go to state 61
    actual_args  go to state 62


State 34

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   39       | '-' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', ',', '{', ';']
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 39 (r_expr)

    Conflict between rule 39 and token ATLEAST resolved as reduce (ATLEAST < '-').
    Conflict between rule 39 and token ATMOST resolved as reduce (ATMOST < '-').
    Conflict between rule 39 and token EQUALS resolved as reduce (EQUALS < '-').
    Conflict between rule 39 and token AND resolved as reduce (AND < '-').
    Conflict between rule 39 and token OR resolved as reduce (OR < '-').
    Conflict between rule 39 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 39 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 39 and token '+' resolved as reduce (%left '+').
    Conflict between rule 39 and token '-' resolved as reduce (%left '-').
    Conflict between rule 39 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 39 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 39 and token '.' resolved as shift ('-' < '.').


State 35

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   40       | '(' r_expr . ')'
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    ')'      shift, and go to state 63


State 36

   19 opt_ident: ':' . IDENT

    IDENT  shift, and go to state 64


State 37

   28 statement: l_expr opt_ident . '=' r_expr ';'

    '='  shift, and go to state 65


State 38

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   42       | r_expr ATLEAST . r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 66


State 39

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   43       | r_expr ATMOST . r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 67


State 40

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   41       | r_expr EQUALS . r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 68


State 41

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   46       | r_expr AND . r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 69


State 42

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   47       | r_expr OR . r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 70


State 43

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   45       | r_expr '>' . r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 71


State 44

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   44       | r_expr '<' . r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 72


State 45

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   35       | r_expr '+' . r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 73


State 46

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   36       | r_expr '-' . r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 74


State 47

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   37       | r_expr '*' . r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 75


State 48

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   38       | r_expr '/' . r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 76


State 49

   30 l_expr: r_expr '.' . IDENT
   49 r_expr: r_expr '.' . IDENT '(' actual_args ')'

    IDENT  shift, and go to state 77


State 50

   31 statement: r_expr ';' .

    $default  reduce using rule 31 (statement)


State 51

    4 statements: statements . statement
   15 class_body: '{' statements . methods '}'
   16 methods: . methods method
   17        | . %empty  [DEF, '}']
   22 statement: . IF r_expr statement_block more_elif opt_else
   27          | . WHILE r_expr statement_block
   28          | . l_expr opt_ident '=' r_expr ';'
   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   31 statement: . r_expr ';'
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'
   55 statement: . RETURN opt_r_expr ';'
   58          | . typecase
   59 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    RETURN      shift, and go to state 11
    TYPECASE    shift, and go to state 12
    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 17 (methods)

    methods    go to state 78
    statement  go to state 19
    l_expr     go to state 20
    r_expr     go to state 21
    typecase   go to state 22


State 52

   12 arg: IDENT . ':' IDENT

    ':'  shift, and go to state 79


State 53

    7 class_signature: CLASS IDENT '(' formal_args . ')' opt_extends

    ')'  shift, and go to state 80


State 54

    8 formal_args: args .

    $default  reduce using rule 8 (formal_args)


State 55

   10 args: arg .  [')']
   11     | arg . ',' arg

    ','  shift, and go to state 81

    $default  reduce using rule 10 (args)


State 56

    4 statements: . statements statement
    5           | . %empty
   21 statement_block: '{' . statements '}'

    $default  reduce using rule 5 (statements)

    statements  go to state 82


State 57

   22 statement: IF r_expr statement_block . more_elif opt_else
   23 more_elif: . more_elif ELIF r_expr statement_block
   24          | . %empty

    $default  reduce using rule 24 (more_elif)

    more_elif  go to state 83


State 58

   27 statement: WHILE r_expr statement_block .

    $default  reduce using rule 27 (statement)


State 59

   55 statement: RETURN opt_r_expr ';' .

    $default  reduce using rule 55 (statement)


State 60

   59 typecase: TYPECASE r_expr '{' . type_alt '}'
   60 type_alt: . type_alt IDENT ':' IDENT statement_block
   61         | . %empty

    $default  reduce using rule 61 (type_alt)

    type_alt  go to state 84


State 61

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'
   50 actual_args: r_expr . seq_r_expr
   52 seq_r_expr: . seq_r_expr ',' r_expr
   53           | . %empty  [')', ',']

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 53 (seq_r_expr)

    seq_r_expr  go to state 85


State 62

   54 r_expr: IDENT '(' actual_args . ')'

    ')'  shift, and go to state 86


State 63

   40 r_expr: '(' r_expr ')' .

    $default  reduce using rule 40 (r_expr)


State 64

   19 opt_ident: ':' IDENT .

    $default  reduce using rule 19 (opt_ident)


State 65

   28 statement: l_expr opt_ident '=' . r_expr ';'
   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 87


State 66

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   42       | r_expr ATLEAST r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', ',', '{', ';']
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 42 (r_expr)

    Conflict between rule 42 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 42 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 42 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 42 and token AND resolved as reduce (AND < ATLEAST).
    Conflict between rule 42 and token OR resolved as reduce (OR < ATLEAST).
    Conflict between rule 42 and token '>' resolved as reduce (%left '>').
    Conflict between rule 42 and token '<' resolved as reduce (%left '<').
    Conflict between rule 42 and token '+' resolved as shift (ATLEAST < '+').
    Conflict between rule 42 and token '-' resolved as shift (ATLEAST < '-').
    Conflict between rule 42 and token '*' resolved as shift (ATLEAST < '*').
    Conflict between rule 42 and token '/' resolved as shift (ATLEAST < '/').
    Conflict between rule 42 and token '.' resolved as shift (ATLEAST < '.').


State 67

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   43       | r_expr ATMOST r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', ',', '{', ';']
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 43 (r_expr)

    Conflict between rule 43 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 43 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 43 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 43 and token AND resolved as reduce (AND < ATMOST).
    Conflict between rule 43 and token OR resolved as reduce (OR < ATMOST).
    Conflict between rule 43 and token '>' resolved as reduce (%left '>').
    Conflict between rule 43 and token '<' resolved as reduce (%left '<').
    Conflict between rule 43 and token '+' resolved as shift (ATMOST < '+').
    Conflict between rule 43 and token '-' resolved as shift (ATMOST < '-').
    Conflict between rule 43 and token '*' resolved as shift (ATMOST < '*').
    Conflict between rule 43 and token '/' resolved as shift (ATMOST < '/').
    Conflict between rule 43 and token '.' resolved as shift (ATMOST < '.').


State 68

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   41       | r_expr EQUALS r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', ',', '{', ';']
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 41 (r_expr)

    Conflict between rule 41 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 41 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 41 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 41 and token AND resolved as reduce (AND < EQUALS).
    Conflict between rule 41 and token OR resolved as reduce (OR < EQUALS).
    Conflict between rule 41 and token '>' resolved as reduce (%left '>').
    Conflict between rule 41 and token '<' resolved as reduce (%left '<').
    Conflict between rule 41 and token '+' resolved as shift (EQUALS < '+').
    Conflict between rule 41 and token '-' resolved as shift (EQUALS < '-').
    Conflict between rule 41 and token '*' resolved as shift (EQUALS < '*').
    Conflict between rule 41 and token '/' resolved as shift (EQUALS < '/').
    Conflict between rule 41 and token '.' resolved as shift (EQUALS < '.').


State 69

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   46       | r_expr AND r_expr .  [AND, OR, ')', ',', '{', ';']
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 46 (r_expr)

    Conflict between rule 46 and token ATLEAST resolved as shift (AND < ATLEAST).
    Conflict between rule 46 and token ATMOST resolved as shift (AND < ATMOST).
    Conflict between rule 46 and token EQUALS resolved as shift (AND < EQUALS).
    Conflict between rule 46 and token AND resolved as reduce (%left AND).
    Conflict between rule 46 and token OR resolved as reduce (%left OR).
    Conflict between rule 46 and token '>' resolved as shift (AND < '>').
    Conflict between rule 46 and token '<' resolved as shift (AND < '<').
    Conflict between rule 46 and token '+' resolved as shift (AND < '+').
    Conflict between rule 46 and token '-' resolved as shift (AND < '-').
    Conflict between rule 46 and token '*' resolved as shift (AND < '*').
    Conflict between rule 46 and token '/' resolved as shift (AND < '/').
    Conflict between rule 46 and token '.' resolved as shift (AND < '.').


State 70

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   47       | r_expr OR r_expr .  [AND, OR, ')', ',', '{', ';']
   49       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 47 (r_expr)

    Conflict between rule 47 and token ATLEAST resolved as shift (OR < ATLEAST).
    Conflict between rule 47 and token ATMOST resolved as shift (OR < ATMOST).
    Conflict between rule 47 and token EQUALS resolved as shift (OR < EQUALS).
    Conflict between rule 47 and token AND resolved as reduce (%left AND).
    Conflict between rule 47 and token OR resolved as reduce (%left OR).
    Conflict between rule 47 and token '>' resolved as shift (OR < '>').
    Conflict between rule 47 and token '<' resolved as shift (OR < '<').
    Conflict between rule 47 and token '+' resolved as shift (OR < '+').
    Conflict between rule 47 and token '-' resolved as shift (OR < '-').
    Conflict between rule 47 and token '*' resolved as shift (OR < '*').
    Conflict between rule 47 and token '/' resolved as shift (OR < '/').
    Conflict between rule 47 and token '.' resolved as shift (OR < '.').


State 71

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   45       | r_expr '>' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', ',', '{', ';']
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 45 (r_expr)

    Conflict between rule 45 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 45 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 45 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 45 and token AND resolved as reduce (AND < '>').
    Conflict between rule 45 and token OR resolved as reduce (OR < '>').
    Conflict between rule 45 and token '>' resolved as reduce (%left '>').
    Conflict between rule 45 and token '<' resolved as reduce (%left '<').
    Conflict between rule 45 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 45 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 45 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 45 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 45 and token '.' resolved as shift ('>' < '.').


State 72

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   44       | r_expr '<' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', ')', ',', '{', ';']
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46
    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 44 (r_expr)

    Conflict between rule 44 and token ATLEAST resolved as reduce (%left ATLEAST).
    Conflict between rule 44 and token ATMOST resolved as reduce (%left ATMOST).
    Conflict between rule 44 and token EQUALS resolved as reduce (%left EQUALS).
    Conflict between rule 44 and token AND resolved as reduce (AND < '<').
    Conflict between rule 44 and token OR resolved as reduce (OR < '<').
    Conflict between rule 44 and token '>' resolved as reduce (%left '>').
    Conflict between rule 44 and token '<' resolved as reduce (%left '<').
    Conflict between rule 44 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 44 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 44 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 44 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 44 and token '.' resolved as shift ('<' < '.').


State 73

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   35       | r_expr '+' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', ',', '{', ';']
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 35 (r_expr)

    Conflict between rule 35 and token ATLEAST resolved as reduce (ATLEAST < '+').
    Conflict between rule 35 and token ATMOST resolved as reduce (ATMOST < '+').
    Conflict between rule 35 and token EQUALS resolved as reduce (EQUALS < '+').
    Conflict between rule 35 and token AND resolved as reduce (AND < '+').
    Conflict between rule 35 and token OR resolved as reduce (OR < '+').
    Conflict between rule 35 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 35 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 35 and token '+' resolved as reduce (%left '+').
    Conflict between rule 35 and token '-' resolved as reduce (%left '-').
    Conflict between rule 35 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 35 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 35 and token '.' resolved as shift ('+' < '.').


State 74

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   36       | r_expr '-' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', ')', ',', '{', ';']
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '*'  shift, and go to state 47
    '/'  shift, and go to state 48
    '.'  shift, and go to state 49

    $default  reduce using rule 36 (r_expr)

    Conflict between rule 36 and token ATLEAST resolved as reduce (ATLEAST < '-').
    Conflict between rule 36 and token ATMOST resolved as reduce (ATMOST < '-').
    Conflict between rule 36 and token EQUALS resolved as reduce (EQUALS < '-').
    Conflict between rule 36 and token AND resolved as reduce (AND < '-').
    Conflict between rule 36 and token OR resolved as reduce (OR < '-').
    Conflict between rule 36 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 36 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 36 and token '+' resolved as reduce (%left '+').
    Conflict between rule 36 and token '-' resolved as reduce (%left '-').
    Conflict between rule 36 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 36 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 36 and token '.' resolved as shift ('-' < '.').


State 75

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   37       | r_expr '*' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', ')', ',', '{', ';']
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '.'  shift, and go to state 49

    $default  reduce using rule 37 (r_expr)

    Conflict between rule 37 and token ATLEAST resolved as reduce (ATLEAST < '*').
    Conflict between rule 37 and token ATMOST resolved as reduce (ATMOST < '*').
    Conflict between rule 37 and token EQUALS resolved as reduce (EQUALS < '*').
    Conflict between rule 37 and token AND resolved as reduce (AND < '*').
    Conflict between rule 37 and token OR resolved as reduce (OR < '*').
    Conflict between rule 37 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 37 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 37 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 37 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 37 and token '*' resolved as reduce (%left '*').
    Conflict between rule 37 and token '/' resolved as reduce (%left '/').
    Conflict between rule 37 and token '.' resolved as shift ('*' < '.').


State 76

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   38       | r_expr '/' r_expr .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', ')', ',', '{', ';']
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    '.'  shift, and go to state 49

    $default  reduce using rule 38 (r_expr)

    Conflict between rule 38 and token ATLEAST resolved as reduce (ATLEAST < '/').
    Conflict between rule 38 and token ATMOST resolved as reduce (ATMOST < '/').
    Conflict between rule 38 and token EQUALS resolved as reduce (EQUALS < '/').
    Conflict between rule 38 and token AND resolved as reduce (AND < '/').
    Conflict between rule 38 and token OR resolved as reduce (OR < '/').
    Conflict between rule 38 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 38 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 38 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 38 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 38 and token '*' resolved as reduce (%left '*').
    Conflict between rule 38 and token '/' resolved as reduce (%left '/').
    Conflict between rule 38 and token '.' resolved as shift ('/' < '.').


State 77

   30 l_expr: r_expr '.' IDENT .  [ATLEAST, ATMOST, EQUALS, AND, OR, '>', '<', '+', '-', '*', '/', '.', ')', ',', ':', '{', '=', ';']
   49 r_expr: r_expr '.' IDENT . '(' actual_args ')'

    '('  shift, and go to state 88

    $default  reduce using rule 30 (l_expr)


State 78

   15 class_body: '{' statements methods . '}'
   16 methods: methods . method
   18 method: . DEF IDENT '(' formal_args ')' opt_ident statement_block

    DEF  shift, and go to state 89
    '}'  shift, and go to state 90

    method  go to state 91


State 79

   12 arg: IDENT ':' . IDENT

    IDENT  shift, and go to state 92


State 80

    7 class_signature: CLASS IDENT '(' formal_args ')' . opt_extends
   13 opt_extends: . EXTENDS IDENT
   14            | . %empty  ['{']

    EXTENDS  shift, and go to state 93

    $default  reduce using rule 14 (opt_extends)

    opt_extends  go to state 94


State 81

   11 args: arg ',' . arg
   12 arg: . IDENT ':' IDENT

    IDENT  shift, and go to state 52

    arg  go to state 95


State 82

    4 statements: statements . statement
   21 statement_block: '{' statements . '}'
   22 statement: . IF r_expr statement_block more_elif opt_else
   27          | . WHILE r_expr statement_block
   28          | . l_expr opt_ident '=' r_expr ';'
   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   31 statement: . r_expr ';'
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'
   55 statement: . RETURN opt_r_expr ';'
   58          | . typecase
   59 typecase: . TYPECASE r_expr '{' type_alt '}'

    IF          shift, and go to state 9
    WHILE       shift, and go to state 10
    RETURN      shift, and go to state 11
    TYPECASE    shift, and go to state 12
    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18
    '}'         shift, and go to state 96

    statement  go to state 19
    l_expr     go to state 20
    r_expr     go to state 21
    typecase   go to state 22


State 83

   22 statement: IF r_expr statement_block more_elif . opt_else
   23 more_elif: more_elif . ELIF r_expr statement_block
   25 opt_else: . ELSE statement_block
   26         | . %empty  [$end, DEF, IF, WHILE, RETURN, TYPECASE, NOT, IDENT, INT_LIT, STRING_LIT, '-', '(', '}']

    ELIF  shift, and go to state 97
    ELSE  shift, and go to state 98

    $default  reduce using rule 26 (opt_else)

    opt_else  go to state 99


State 84

   59 typecase: TYPECASE r_expr '{' type_alt . '}'
   60 type_alt: type_alt . IDENT ':' IDENT statement_block

    IDENT  shift, and go to state 100
    '}'    shift, and go to state 101


State 85

   50 actual_args: r_expr seq_r_expr .  [')']
   52 seq_r_expr: seq_r_expr . ',' r_expr

    ','  shift, and go to state 102

    $default  reduce using rule 50 (actual_args)


State 86

   54 r_expr: IDENT '(' actual_args ')' .

    $default  reduce using rule 54 (r_expr)


State 87

   28 statement: l_expr opt_ident '=' r_expr . ';'
   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    ';'      shift, and go to state 103


State 88

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   49       | r_expr '.' IDENT '(' . actual_args ')'
   50 actual_args: . r_expr seq_r_expr
   51            | . %empty  [')']
   54 r_expr: . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    $default  reduce using rule 51 (actual_args)

    l_expr       go to state 26
    r_expr       go to state 61
    actual_args  go to state 104


State 89

   18 method: DEF . IDENT '(' formal_args ')' opt_ident statement_block

    IDENT  shift, and go to state 105


State 90

   15 class_body: '{' statements methods '}' .

    $default  reduce using rule 15 (class_body)


State 91

   16 methods: methods method .

    $default  reduce using rule 16 (methods)


State 92

   12 arg: IDENT ':' IDENT .

    $default  reduce using rule 12 (arg)


State 93

   13 opt_extends: EXTENDS . IDENT

    IDENT  shift, and go to state 106


State 94

    7 class_signature: CLASS IDENT '(' formal_args ')' opt_extends .

    $default  reduce using rule 7 (class_signature)


State 95

   11 args: arg ',' arg .

    $default  reduce using rule 11 (args)


State 96

   21 statement_block: '{' statements '}' .

    $default  reduce using rule 21 (statement_block)


State 97

   23 more_elif: more_elif ELIF . r_expr statement_block
   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   54       | . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 107


State 98

   21 statement_block: . '{' statements '}'
   25 opt_else: ELSE . statement_block

    '{'  shift, and go to state 56

    statement_block  go to state 108


State 99

   22 statement: IF r_expr statement_block more_elif opt_else .

    $default  reduce using rule 22 (statement)


State 100

   60 type_alt: type_alt IDENT . ':' IDENT statement_block

    ':'  shift, and go to state 109


State 101

   59 typecase: TYPECASE r_expr '{' type_alt '}' .

    $default  reduce using rule 59 (typecase)


State 102

   29 l_expr: . IDENT
   30       | . r_expr '.' IDENT
   32 r_expr: . STRING_LIT
   33       | . INT_LIT
   34       | . l_expr
   35       | . r_expr '+' r_expr
   36       | . r_expr '-' r_expr
   37       | . r_expr '*' r_expr
   38       | . r_expr '/' r_expr
   39       | . '-' r_expr
   40       | . '(' r_expr ')'
   41       | . r_expr EQUALS r_expr
   42       | . r_expr ATLEAST r_expr
   43       | . r_expr ATMOST r_expr
   44       | . r_expr '<' r_expr
   45       | . r_expr '>' r_expr
   46       | . r_expr AND r_expr
   47       | . r_expr OR r_expr
   48       | . NOT r_expr
   49       | . r_expr '.' IDENT '(' actual_args ')'
   52 seq_r_expr: seq_r_expr ',' . r_expr
   54 r_expr: . IDENT '(' actual_args ')'

    NOT         shift, and go to state 13
    IDENT       shift, and go to state 14
    INT_LIT     shift, and go to state 15
    STRING_LIT  shift, and go to state 16
    '-'         shift, and go to state 17
    '('         shift, and go to state 18

    l_expr  go to state 26
    r_expr  go to state 110


State 103

   28 statement: l_expr opt_ident '=' r_expr ';' .

    $default  reduce using rule 28 (statement)


State 104

   49 r_expr: r_expr '.' IDENT '(' actual_args . ')'

    ')'  shift, and go to state 111


State 105

   18 method: DEF IDENT . '(' formal_args ')' opt_ident statement_block

    '('  shift, and go to state 112


State 106

   13 opt_extends: EXTENDS IDENT .

    $default  reduce using rule 13 (opt_extends)


State 107

   21 statement_block: . '{' statements '}'
   23 more_elif: more_elif ELIF r_expr . statement_block
   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49
    '{'      shift, and go to state 56

    statement_block  go to state 113


State 108

   25 opt_else: ELSE statement_block .

    $default  reduce using rule 25 (opt_else)


State 109

   60 type_alt: type_alt IDENT ':' . IDENT statement_block

    IDENT  shift, and go to state 114


State 110

   30 l_expr: r_expr . '.' IDENT
   35 r_expr: r_expr . '+' r_expr
   36       | r_expr . '-' r_expr
   37       | r_expr . '*' r_expr
   38       | r_expr . '/' r_expr
   41       | r_expr . EQUALS r_expr
   42       | r_expr . ATLEAST r_expr
   43       | r_expr . ATMOST r_expr
   44       | r_expr . '<' r_expr
   45       | r_expr . '>' r_expr
   46       | r_expr . AND r_expr
   47       | r_expr . OR r_expr
   49       | r_expr . '.' IDENT '(' actual_args ')'
   52 seq_r_expr: seq_r_expr ',' r_expr .  [')', ',']

    ATLEAST  shift, and go to state 38
    ATMOST   shift, and go to state 39
    EQUALS   shift, and go to state 40
    AND      shift, and go to state 41
    OR       shift, and go to state 42
    '>'      shift, and go to state 43
    '<'      shift, and go to state 44
    '+'      shift, and go to state 45
    '-'      shift, and go to state 46
    '*'      shift, and go to state 47
    '/'      shift, and go to state 48
    '.'      shift, and go to state 49

    $default  reduce using rule 52 (seq_r_expr)


State 111

   49 r_expr: r_expr '.' IDENT '(' actual_args ')' .

    $default  reduce using rule 49 (r_expr)


State 112

    8 formal_args: . args
    9            | . %empty  [')']
   10 args: . arg
   11     | . arg ',' arg
   12 arg: . IDENT ':' IDENT
   18 method: DEF IDENT '(' . formal_args ')' opt_ident statement_block

    IDENT  shift, and go to state 52

    $default  reduce using rule 9 (formal_args)

    formal_args  go to state 115
    args         go to state 54
    arg          go to state 55


State 113

   23 more_elif: more_elif ELIF r_expr statement_block .

    $default  reduce using rule 23 (more_elif)


State 114

   21 statement_block: . '{' statements '}'
   60 type_alt: type_alt IDENT ':' IDENT . statement_block

    '{'  shift, and go to state 56

    statement_block  go to state 116


State 115

   18 method: DEF IDENT '(' formal_args . ')' opt_ident statement_block

    ')'  shift, and go to state 117


State 116

   60 type_alt: type_alt IDENT ':' IDENT statement_block .

    $default  reduce using rule 60 (type_alt)


State 117

   18 method: DEF IDENT '(' formal_args ')' . opt_ident statement_block
   19 opt_ident: . ':' IDENT
   20          | . %empty  ['{']

    ':'  shift, and go to state 36

    $default  reduce using rule 20 (opt_ident)

    opt_ident  go to state 118


State 118

   18 method: DEF IDENT '(' formal_args ')' opt_ident . statement_block
   21 statement_block: . '{' statements '}'

    '{'  shift, and go to state 56

    statement_block  go to state 119


State 119

   18 method: DEF IDENT '(' formal_args ')' opt_ident statement_block .

    $default  reduce using rule 18 (method)
