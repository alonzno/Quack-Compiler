/**
 * How should one perform type inference 
 * for variable x in this program? 
 *
 * Iterate to a fixed point (abstract interpretation)? 
 * Somehow short-circuit the walk up the type system? 
 * Impose some restriction that prevents this problem? 
 */

class C1()  extends Obj {
   def foo() : Obj {
       return Obj();
   }
}

class C2() extends C1 {
   def foo() : C1 {
        return C1();   /* Conforms to C1.foo() */
   }
}
class C3() extends C2 {
   def foo() : C2 {
        return C2();   /* Conforms to C2.foo() */
   }
}

class Obj() extends C3 {
    def foo() : C3 {
         return C3();  /* Conforms to C3.foo() */
    }
}
