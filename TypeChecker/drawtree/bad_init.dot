digraph AST {
root[shape=box,label="Block"];
node_1[shape=record,label="<e_0>0|<e_1>1"];
node_2[shape=box,label="Block"];
node_3[shape=record,label="<e_0>0"];
node_4[shape=box,label="Class"];
node_5[shape=box,label="Ident"];
node_6[shape=plaintext,label="BadInit"];
node_5 -> node_6 [taillabel="text_"];
node_4 -> node_5 [taillabel="class_name_"];
node_7[shape=box,label="Ident"];
node_8[shape=plaintext,label=""];
node_7 -> node_8 [taillabel="text_"];
node_4 -> node_7 [taillabel="super_name_"];
node_9[shape=box,label="Block"];
node_10[shape=record,label=""];
node_9 -> node_10 [taillabel="stmts_"];
node_4 -> node_9 [taillabel="args_"];
node_11[shape=box,label="Block"];
node_12[shape=record,label=""];
node_11 -> node_12 [taillabel="stmts_"];
node_4 -> node_11 [taillabel="stmts_"];
node_13[shape=box,label="Block"];
node_14[shape=record,label="<e_0>0"];
node_15[shape=box,label="Method"];
node_16[shape=box,label="Ident"];
node_17[shape=plaintext,label="bad_init"];
node_16 -> node_17 [taillabel="text_"];
node_15 -> node_16 [taillabel="name_"];
node_18[shape=box,label="Ident"];
node_19[shape=plaintext,label=""];
node_18 -> node_19 [taillabel="text_"];
node_15 -> node_18 [taillabel="return_type_"];
node_20[shape=box,label="Block"];
node_21[shape=record,label=""];
node_20 -> node_21 [taillabel="stmts_"];
node_15 -> node_20 [taillabel="args_"];
node_22[shape=box,label="Block"];
node_23[shape=record,label="<e_0>0|<e_1>1|<e_2>2"];
node_24[shape=box,label="Assign"];
node_25[shape=box,label="Stub"];
node_26[shape=plaintext,label="NI: L_assign"];
node_25 -> node_26 [taillabel="text_"];
node_24 -> node_25 [taillabel="l_expr_"];
node_27[shape=box,label="Stub"];
node_28[shape=plaintext,label="NI: R_assign"];
node_27 -> node_28 [taillabel="text_"];
node_24 -> node_27 [taillabel="r_expr_"];
node_23:e_0 -> node_24;
node_29[shape=box,label="Assign"];
node_30[shape=box,label="Stub"];
node_31[shape=plaintext,label="NI: L_assign"];
node_30 -> node_31 [taillabel="text_"];
node_29 -> node_30 [taillabel="l_expr_"];
node_32[shape=box,label="Stub"];
node_33[shape=plaintext,label="NI: R_assign"];
node_32 -> node_33 [taillabel="text_"];
node_29 -> node_32 [taillabel="r_expr_"];
node_23:e_1 -> node_29;
node_34[shape=box,label="While"];
node_35[shape=box,label="Stub"];
node_36[shape=plaintext,label="NI: r_expr of while"];
node_35 -> node_36 [taillabel="text_"];
node_34 -> node_35 [taillabel="cond_"];
node_37[shape=box,label="Block"];
node_38[shape=record,label="<e_0>0|<e_1>1|<e_2>2"];
node_39[shape=box,label="Stub"];
node_40[shape=plaintext,label="NI: If-statement"];
node_39 -> node_40 [taillabel="text_"];
node_38:e_0 -> node_39;
node_41[shape=box,label="Assign"];
node_42[shape=box,label="Stub"];
node_43[shape=plaintext,label="NI: L_assign"];
node_42 -> node_43 [taillabel="text_"];
node_41 -> node_42 [taillabel="l_expr_"];
node_44[shape=box,label="Stub"];
node_45[shape=plaintext,label="NI: R_assign"];
node_44 -> node_45 [taillabel="text_"];
node_41 -> node_44 [taillabel="r_expr_"];
node_38:e_1 -> node_41;
node_46[shape=box,label="Assign"];
node_47[shape=box,label="Stub"];
node_48[shape=plaintext,label="NI: L_assign"];
node_47 -> node_48 [taillabel="text_"];
node_46 -> node_47 [taillabel="l_expr_"];
node_49[shape=box,label="Stub"];
node_50[shape=plaintext,label="NI: R_assign"];
node_49 -> node_50 [taillabel="text_"];
node_46 -> node_49 [taillabel="r_expr_"];
node_38:e_2 -> node_46;
node_37 -> node_38 [taillabel="stmts_"];
node_34 -> node_37 [taillabel="body_"];
node_23:e_2 -> node_34;
node_22 -> node_23 [taillabel="stmts_"];
node_15 -> node_22 [taillabel="stmts_"];
node_14:e_0 -> node_15;
node_13 -> node_14 [taillabel="stmts_"];
node_4 -> node_13 [taillabel="methods_"];
node_3:e_0 -> node_4;
node_2 -> node_3 [taillabel="stmts_"];
node_1:e_0 -> node_2;
node_51[shape=box,label="Block"];
node_52[shape=record,label=""];
node_51 -> node_52 [taillabel="stmts_"];
node_1:e_1 -> node_51;
root -> node_1 [taillabel="stmts_"];
}
